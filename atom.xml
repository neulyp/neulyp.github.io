<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lyp&#39;s blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-12-27T14:45:45.501Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Loren</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>tomact源码分析1</title>
    <link href="http://yoursite.com/2016/12/27/tomact%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%901/"/>
    <id>http://yoursite.com/2016/12/27/tomact源码分析1/</id>
    <published>2016-12-27T05:33:17.000Z</published>
    <updated>2016-12-27T14:45:45.501Z</updated>
    
    <content type="html"><![CDATA[<h3 id="tomact源码分析1-简单的server实现"><a href="#tomact源码分析1-简单的server实现" class="headerlink" title="tomact源码分析1-简单的server实现"></a>tomact源码分析1-简单的server实现</h3><h4 id="1-HTTP-请求"><a href="#1-HTTP-请求" class="headerlink" title="1.HTTP 请求"></a>1.HTTP 请求</h4><p>一个 HTTP 请求包括三个组成部分：</p>
<ul>
<li>方法—统一资源标识符(URI)—协议/版本</li>
<li>请求的头部</li>
<li>主体内容</li>
</ul>
<p>ps:方法（7种）：GET, POST,HEAD, OPTIONS, PUT, DELETE 和 TRACE。头部结束和内容之间有一个空行</p>
<p>examples</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">POST /examples/default.jsp HTTP/1.1</div><div class="line">Accept: text/plain; text/html</div><div class="line">Accept-Language: en-gb</div><div class="line">Connection: Keep-Alive</div><div class="line">Host: localhost</div><div class="line">User-Agent: Mozilla/4.0 (compatible; MSIE 4.01; Windows 98)</div><div class="line">Content-Length: 33</div><div class="line">Content-Type: application/x-www-form-urlencoded</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line"></div><div class="line">lastName=Franks&amp;firstName=Michael</div></pre></td></tr></table></figure>
<h4 id="2-HTTP-响应"><a href="#2-HTTP-响应" class="headerlink" title="2.HTTP 响应"></a>2.HTTP 响应</h4><p>examples：</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Server: Microsoft-IIS/4.0</div><div class="line">Date: Mon, 5 Jan 2004 13:13:33 GMT</div><div class="line">Content-Type: text/html</div><div class="line">Last-Modified: Mon, 5 Jan 2004 13:13:12 GMT</div><div class="line">Content-Length: 112</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>HTTP Response Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">Welcome to Brainy Software</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h4 id="3-socket-amp-amp-ServerSocket"><a href="#3-socket-amp-amp-ServerSocket" class="headerlink" title="3.socket&amp;&amp;ServerSocket"></a>3.socket&amp;&amp;ServerSocket</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">Socket</span> <span class="params">(java.lang.String host, <span class="keyword">int</span> port)</span></span></div></pre></td></tr></table></figure>
<p>socket类代表一个客户端套接字</p>
<p>serversocket是一个服务器套接字。用来等待来自客户端的连接请求。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">ServerSocket</span><span class="params">(<span class="keyword">int</span> port, <span class="keyword">int</span> backLog, InetAddress bindingAddress)</span></span>;</div></pre></td></tr></table></figure>
<h4 id="4-server例子"><a href="#4-server例子" class="headerlink" title="4.server例子"></a>4.server例子</h4><p>该部分主要分为3个类。是一个最最基础的server实现。</p>
<p>server：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> ex01;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.net.Socket;</div><div class="line"><span class="keyword">import</span> java.net.ServerSocket;</div><div class="line"><span class="keyword">import</span> java.net.InetAddress;</div><div class="line"><span class="keyword">import</span> java.io.InputStream;</div><div class="line"><span class="keyword">import</span> java.io.OutputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServer</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="comment">/** WEB_ROOT is the directory where our HTML and other files reside.</span></div><div class="line">   *  For this package, WEB_ROOT is the "webroot" directory under the working</div><div class="line">   *  directory.</div><div class="line">   *  The working directory is the location in the file system</div><div class="line">   *  from where the java command was invoked.</div><div class="line">   */</div><div class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String WEB_ROOT =</div><div class="line">    System.getProperty(<span class="string">"user.dir"</span>) + File.separator  + <span class="string">"webroot"</span>;</div><div class="line"></div><div class="line">  <span class="comment">// shutdown command</span></div><div class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SHUTDOWN_COMMAND = <span class="string">"/SHUTDOWN"</span>;</div><div class="line"></div><div class="line">  <span class="comment">// the shutdown command received</span></div><div class="line">  <span class="keyword">private</span> <span class="keyword">boolean</span> shutdown = <span class="keyword">false</span>;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">    HttpServer server = <span class="keyword">new</span> HttpServer();</div><div class="line">    System.out.println(WEB_ROOT);</div><div class="line">    server.await();</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">await</span><span class="params">()</span> </span>&#123;</div><div class="line">    ServerSocket serverSocket = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">int</span> port = <span class="number">8080</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      serverSocket =  <span class="keyword">new</span> ServerSocket(port, <span class="number">1</span>, InetAddress.getByName(<span class="string">"127.0.0.1"</span>));</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">      System.exit(<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Loop waiting for a request</span></div><div class="line">    <span class="keyword">while</span> (!shutdown) &#123;</div><div class="line">      Socket socket = <span class="keyword">null</span>;</div><div class="line">      InputStream input = <span class="keyword">null</span>;</div><div class="line">      OutputStream output = <span class="keyword">null</span>;</div><div class="line">      <span class="keyword">try</span> &#123;</div><div class="line">        socket = serverSocket.accept();</div><div class="line">        input = socket.getInputStream();</div><div class="line">        output = socket.getOutputStream();</div><div class="line"></div><div class="line">        <span class="comment">// create Request object and parse</span></div><div class="line">        Request request = <span class="keyword">new</span> Request(input);</div><div class="line">        request.parse();</div><div class="line"></div><div class="line">        <span class="comment">// create Response object</span></div><div class="line">        Response response = <span class="keyword">new</span> Response(output);</div><div class="line">        response.setRequest(request);</div><div class="line">        response.sendStaticResource();</div><div class="line"></div><div class="line">        <span class="comment">// Close the socket</span></div><div class="line">        socket.close();</div><div class="line"></div><div class="line">        <span class="comment">//check if the previous URI is a shutdown command</span></div><div class="line">        shutdown = request.getUri().equals(SHUTDOWN_COMMAND);</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">        <span class="keyword">continue</span>;</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>request:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> ex01;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.InputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Request</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="keyword">private</span> InputStream input;</div><div class="line">  <span class="keyword">private</span> String uri;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Request</span><span class="params">(InputStream input)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.input = input;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">parse</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// Read a set of characters from the socket</span></div><div class="line">    StringBuffer request = <span class="keyword">new</span> StringBuffer(<span class="number">2048</span>);</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2048</span>];</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      i = input.read(buffer);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">      e.printStackTrace();</div><div class="line">      i = -<span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</div><div class="line">      request.append((<span class="keyword">char</span>) buffer[j]);</div><div class="line">    &#125;</div><div class="line">    System.out.print(request.toString());</div><div class="line">    uri = parseUri(request.toString());</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">private</span> String <span class="title">parseUri</span><span class="params">(String requestString)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> index1, index2;</div><div class="line">    index1 = requestString.indexOf(<span class="string">' '</span>);</div><div class="line">    <span class="keyword">if</span> (index1 != -<span class="number">1</span>) &#123;</div><div class="line">      index2 = requestString.indexOf(<span class="string">' '</span>, index1 + <span class="number">1</span>);</div><div class="line">      <span class="keyword">if</span> (index2 &gt; index1)</div><div class="line">        <span class="keyword">return</span> requestString.substring(index1 + <span class="number">1</span>, index2);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">getUri</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> uri;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>response:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> ex01;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.OutputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.FileInputStream;</div><div class="line"><span class="keyword">import</span> java.io.File;</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line">  HTTP Response = Status-Line</div><div class="line">    *(( general-header | response-header | entity-header ) CRLF)</div><div class="line">    CRLF</div><div class="line">    [ message-body ]</div><div class="line">    Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF</div><div class="line">*/</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Response</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BUFFER_SIZE = <span class="number">1024</span>;</div><div class="line">  Request request;</div><div class="line">  OutputStream output;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="title">Response</span><span class="params">(OutputStream output)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.output = output;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRequest</span><span class="params">(Request request)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>.request = request;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sendStaticResource</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">    <span class="keyword">byte</span>[] bytes = <span class="keyword">new</span> <span class="keyword">byte</span>[BUFFER_SIZE];</div><div class="line">    FileInputStream fis = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">      File file = <span class="keyword">new</span> File(HttpServer.WEB_ROOT, request.getUri());</div><div class="line">      <span class="keyword">if</span> (file.exists()) &#123;</div><div class="line">        fis = <span class="keyword">new</span> FileInputStream(file);</div><div class="line">        <span class="keyword">int</span> ch = fis.read(bytes, <span class="number">0</span>, BUFFER_SIZE);</div><div class="line">        <span class="keyword">while</span> (ch!=-<span class="number">1</span>) &#123;</div><div class="line">          output.write(bytes, <span class="number">0</span>, ch);</div><div class="line">          ch = fis.read(bytes, <span class="number">0</span>, BUFFER_SIZE);</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">// file not found</span></div><div class="line">        String errorMessage = <span class="string">"HTTP/1.1 404 File Not Found\r\n"</span> +</div><div class="line">          <span class="string">"Content-Type: text/html\r\n"</span> +</div><div class="line">          <span class="string">"Content-Length: 23\r\n"</span> +</div><div class="line">          <span class="string">"\r\n"</span> +</div><div class="line">          <span class="string">"&lt;h1&gt;File Not Found&lt;/h1&gt;"</span>;</div><div class="line">        output.write(errorMessage.getBytes());</div><div class="line">      &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">      <span class="comment">// thrown if cannot instantiate a File object</span></div><div class="line">      System.out.println(e.toString() );</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">finally</span> &#123;</div><div class="line">      <span class="keyword">if</span> (fis!=<span class="keyword">null</span>)</div><div class="line">        fis.close();</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;tomact源码分析1-简单的server实现&quot;&gt;&lt;a href=&quot;#tomact源码分析1-简单的server实现&quot; class=&quot;headerlink&quot; title=&quot;tomact源码分析1-简单的server实现&quot;&gt;&lt;/a&gt;tomact源码分析1-简单的se
    
    </summary>
    
      <category term="tomact" scheme="http://yoursite.com/categories/tomact/"/>
    
    
      <category term="tomact" scheme="http://yoursite.com/tags/tomact/"/>
    
  </entry>
  
  <entry>
    <title>pat1011</title>
    <link href="http://yoursite.com/2016/12/26/pat1011/"/>
    <id>http://yoursite.com/2016/12/26/pat1011/</id>
    <published>2016-12-26T12:50:35.000Z</published>
    <updated>2016-12-26T12:55:00.701Z</updated>
    
    <content type="html"><![CDATA[<p>1011.World Cup Betting (20)</p>
<p>With the 2010 FIFA World Cup running, football fans the world over were becoming increasingly excited as the best players from the best teams doing battles for the World Cup trophy in South Africa. Similarly, football betting fans were putting their money where their mouths were, by laying all manner of World Cup bets.</p>
<p>Chinese Football Lottery provided a “Triple Winning” game. The rule of winning was simple: first select any three of the games. Then for each selected game, bet on one of the three possible results – namely W for win, T for tie, and L for lose. There was an odd assigned to each result. The winner’s odd would be the product of the three odds times 65%.</p>
<p>For example, 3 games’ odds are given as the following:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> W    T    L</div><div class="line">1.1  2.5  1.7</div><div class="line">1.2  3.0  1.6</div><div class="line">4.1  1.2  1.1</div></pre></td></tr></table></figure>
<p>To obtain the maximum profit, one must buy W for the 3rd game, T for the 2nd game, and T for the 1st game. If each bet takes 2 yuans, then the maximum profit would be <code>(4.1*3.0*2.5*65%-1)*2 = 37.98</code> yuans (accurate up to 2 decimal places).</p>
<p>Input</p>
<p>Each input file contains one test case. Each case contains the betting information of 3 games. Each game occupies a line with three distinct odds corresponding to W, T and L.</p>
<p>Output</p>
<p>For each test case, print in one line the best bet of each game, and the maximum profit accurate up to 2 decimal places. The characters and the number must be separated by one space.</p>
<p>Sample Input</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.1 2.5 1.7</div><div class="line">1.2 3.0 1.6</div><div class="line">4.1 1.2 1.1</div></pre></td></tr></table></figure>
<p>Sample Output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">T T W 37.98</div></pre></td></tr></table></figure>
<p>思路：属于简单送分题。按照思路，直接写程序就好。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t11</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		String[] s=&#123;<span class="string">"W"</span>,<span class="string">"T"</span>,<span class="string">"L"</span>&#125;;</div><div class="line">		String[] ss=<span class="keyword">new</span> String[<span class="number">3</span>];</div><div class="line">		Scanner sc= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">		<span class="keyword">double</span> sum=<span class="number">1</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)&#123;</div><div class="line">			<span class="keyword">double</span> x=<span class="number">0</span>;</div><div class="line">			<span class="keyword">int</span> index=<span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)&#123;</div><div class="line">				<span class="keyword">double</span> t=sc.nextDouble();</div><div class="line">				<span class="keyword">if</span>(x&lt;t)&#123;</div><div class="line">					x=t;</div><div class="line">					index=j;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			ss[i]=s[index];</div><div class="line">			sum*=x;	</div><div class="line">		&#125;</div><div class="line">		sc.close();</div><div class="line">		<span class="keyword">for</span>(String str:ss)</div><div class="line">			System.out.print(str+<span class="string">" "</span>);</div><div class="line">		System.out.printf(<span class="string">"%.2f"</span>,(sum*<span class="number">0.65</span>-<span class="number">1</span>)*<span class="number">2</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1011.World Cup Betting (20)&lt;/p&gt;
&lt;p&gt;With the 2010 FIFA World Cup running, football fans the world over were becoming increasingly excited 
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>pat1010</title>
    <link href="http://yoursite.com/2016/12/26/pat1010/"/>
    <id>http://yoursite.com/2016/12/26/pat1010/</id>
    <published>2016-12-26T12:43:07.000Z</published>
    <updated>2016-12-26T12:50:14.406Z</updated>
    
    <content type="html"><![CDATA[<p>1010.Radix (25)</p>
<p>Given a pair of positive integers, for example, 6 and 110, can this equation 6 = 110 be true? The answer is “yes”, if 6 is a decimal number and 110 is a binary number.</p>
<p>Now for any pair of positive integers N1 and N2, your task is to find the radix of one number while that of the other is given.</p>
<p>Input Specification:</p>
<p>Each input file contains one test case. Each case occupies a line which contains 4 positive integers:<br>N1 N2 tag radix<br>Here N1 and N2 each has no more than 10 digits. A digit is less than its radix and is chosen from the set {0-9, a-z} where 0-9 represent the decimal numbers 0-9, and a-z represent the decimal numbers 10-35. The last number “radix” is the radix of N1 if “tag” is 1, or of N2 if “tag” is 2.</p>
<p>Output Specification:</p>
<p>For each test case, print in one line the radix of the other number so that the equation N1 = N2 is true. If the equation is impossible, print “Impossible”. If the solution is not unique, output the smallest possible radix.</p>
<p>Sample Input 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">6 110 1 10</div></pre></td></tr></table></figure></p>
<p>Sample Output 1:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">2</div></pre></td></tr></table></figure></p>
<p>Sample Input 2:<br><figure class="highlight plain"><figcaption><span>ab 1 2```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Sample Output 2:</div><div class="line">```Impossible</div></pre></td></tr></table></figure></p>
<p>思路：如果a等于b，第二个进制数应该大于b中最大的数字，小于等于a的值+1。并且基数有可能很大，所以要声明long。</p>
<p>解答：<br>C++版本</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;functional&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> uLL;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1</span>&lt;&lt;<span class="number">30</span>;</div><div class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1e5</span> + <span class="number">50</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">toint</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> ans;</div><div class="line">	<span class="keyword">if</span>(c &gt; <span class="string">'9'</span>) ans = c-<span class="string">'a'</span>+<span class="number">10</span>;</div><div class="line">	<span class="keyword">else</span> ans = c-<span class="string">'0'</span>;</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">uLL <span class="title">change</span><span class="params">(<span class="built_in">string</span> s, uLL r)</span></span>&#123;</div><div class="line">	uLL ans = <span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; s[i]; i++)  ans = ans*r + toint(s[i]);</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">findmax</span><span class="params">(<span class="built_in">string</span> s)</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; s[i]; i++) <span class="keyword">if</span>(ans &lt; toint(s[i])) ans = toint(s[i]);</div><div class="line">	<span class="keyword">return</span> ans;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</div><div class="line">	<span class="keyword">int</span> tag,r;</div><div class="line">	uLL x,y;</div><div class="line">	<span class="built_in">string</span> a,b;</div><div class="line">	<span class="built_in">cin</span>&gt;&gt;a&gt;&gt;b&gt;&gt;tag&gt;&gt;r;</div><div class="line">	<span class="keyword">if</span>(tag==<span class="number">2</span>) swap(a,b);</div><div class="line">	x = change(a,r);</div><div class="line">	<span class="keyword">for</span>(uLL l=findmax(b)+<span class="number">1</span>, r = x+<span class="number">1</span>; l &lt;= r; )&#123;</div><div class="line">		uLL m = l+r &gt;&gt; <span class="number">1</span>;</div><div class="line">		y = change(b,m);</div><div class="line">		<span class="keyword">if</span>(y==x) &#123; <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,m); <span class="keyword">return</span> <span class="number">0</span>; &#125;</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(y&gt;x) r = m<span class="number">-1</span>;</div><div class="line">		<span class="keyword">else</span> l = m+<span class="number">1</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="built_in">printf</span>(<span class="string">"Impossible\n"</span>);</div><div class="line">	<span class="keyword">return</span> <span class="number">0</span>;</div></pre></td></tr></table></figure>
<p>java测试用例没有全部通过。我不知道什么原因。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t10_2</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">toint</span><span class="params">(<span class="keyword">char</span> c)</span></span>&#123;</div><div class="line">		<span class="keyword">return</span> c&gt;<span class="string">'9'</span>?c-<span class="string">'a'</span>+<span class="number">10</span>:c-<span class="string">'0'</span>;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">change</span><span class="params">(String s,<span class="keyword">long</span> radix)</span></span>&#123;</div><div class="line">		<span class="keyword">long</span> ans=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)&#123;</div><div class="line">			ans=ans*radix+toint(s.charAt(i));</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> ans;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">findmax</span><span class="params">(String s)</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> ans=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</div><div class="line">			<span class="keyword">if</span>(ans&lt;toint(s.charAt(i))) ans=toint(s.charAt(i));</div><div class="line">		<span class="keyword">return</span> ans;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="keyword">static</span> <span class="keyword">long</span> tag,r;</div><div class="line">	<span class="keyword">static</span> String a,b;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		<span class="keyword">long</span> x,y;</div><div class="line">		Scanner sc=<span class="keyword">new</span> Scanner(System.in);</div><div class="line">		a=sc.next();</div><div class="line">		b=sc.next();</div><div class="line">		tag=sc.nextInt();</div><div class="line">		r=sc.nextLong();</div><div class="line">		sc.close();</div><div class="line">		<span class="keyword">if</span>(tag==<span class="number">2</span>)&#123;</div><div class="line">			String tmp=a;a=b;b=tmp;</div><div class="line">		&#125;</div><div class="line">		x=change(a, r);		</div><div class="line">		<span class="keyword">long</span> left=findmax(b)+<span class="number">1</span>,right=x+<span class="number">1</span>;</div><div class="line">		<span class="keyword">while</span>(left&lt;=right)&#123;</div><div class="line">			<span class="keyword">long</span> middle=(left+right)&gt;&gt;<span class="number">1</span>;</div><div class="line">			y=change(b, middle);</div><div class="line">			<span class="keyword">if</span>(x==y)&#123;System.out.println(middle);  <span class="keyword">return</span>;&#125;</div><div class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(y&gt;x) right=middle-<span class="number">1</span>;</div><div class="line">			<span class="keyword">else</span> left=middle+<span class="number">1</span>;</div><div class="line">		&#125;</div><div class="line">		System.out.println(<span class="string">"Impossible"</span>);</div><div class="line">		<span class="keyword">return</span> ;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1010.Radix (25)&lt;/p&gt;
&lt;p&gt;Given a pair of positive integers, for example, 6 and 110, can this equation 6 = 110 be true? The answer is “yes”,
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>memcached</title>
    <link href="http://yoursite.com/2016/12/24/memcached/"/>
    <id>http://yoursite.com/2016/12/24/memcached/</id>
    <published>2016-12-24T05:21:48.000Z</published>
    <updated>2016-12-24T05:23:03.860Z</updated>
    
    <content type="html"><![CDATA[<p>原理：</p>
<ol>
<li>Memcached是danga的一个项目，最早是为LiveJournal服务的，后来被很多大型网站采用。www.danga.com</li>
<li>一种缓存技术，可以把你的数据放入内存，从而通过内存访问，提速。维护了一张大的hashtable表，该表是在内存中的，表结构：key    value。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;原理：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Memcached是danga的一个项目，最早是为LiveJournal服务的，后来被很多大型网站采用。www.danga.com&lt;/li&gt;
&lt;li&gt;一种缓存技术，可以把你的数据放入内存，从而通过内存访问，提速。维护了一张大的hashtab
    
    </summary>
    
    
      <category term="hadoop" scheme="http://yoursite.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>redis</title>
    <link href="http://yoursite.com/2016/12/24/redis/"/>
    <id>http://yoursite.com/2016/12/24/redis/</id>
    <published>2016-12-24T04:35:12.000Z</published>
    <updated>2016-12-24T05:18:18.984Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.yiibai.com/redis/redis_quick_guide.html" target="_blank" rel="external">http://www.yiibai.com/redis/redis_quick_guide.html</a></p>
<p>Redis是一个速度非常快的非关系数据库，它可以存储键与5种不同类型的值之间的映射，可以将存储在内存的键值对数据持久化到硬盘，可以使用复制特性来扩展读性能，还可以使用客户端分片来扩展写性能。</p>
<p>安装：<br><a href="http://www.cnblogs.com/sandea/p/5782192.html" target="_blank" rel="external">http://www.cnblogs.com/sandea/p/5782192.html</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">wget http://download.redis.io/releases/redis-3.2.3.tar.gz</div><div class="line"></div><div class="line">tar -zxvf redis-3.2.3.tar.gz</div><div class="line"></div><div class="line">mv redis-3.2.3 redis</div><div class="line">cd redis</div><div class="line">make MALLOC=libc</div><div class="line">make install</div></pre></td></tr></table></figure>
<h3 id="1-特点"><a href="#1-特点" class="headerlink" title="1.特点"></a>1.特点</h3><p><img src="http://i.imgur.com/7VRR2Xz.png" alt=""></p>
<p>Redis 有三个主要使其有别于其它很多竞争对手的特点：</p>
<ul>
<li>Redis是完全在内存中保存数据的数据库，使用磁盘只是为了持久性目的； </li>
<li>Redis相比许多键值数据存储系统有相对丰富的数据类型； </li>
<li>Redis可以将数据复制到任意数量的从服务器中； </li>
</ul>
<p>Redis优点</p>
<ul>
<li>异常快速 : Redis是非常快的，每秒可以执行大约110000设置操作，81000个/每秒的读取操作。</li>
<li>支持丰富的数据类型 : Redis支持最大多数开发人员已经知道如列表，集合，可排序集合，哈希等数据类型。这使得在应用中很容易解决的各种问题，因为我们知道哪些问题处理使用哪种数据类型更好解决。</li>
<li>操作都是原子的 : 所有 Redis 的操作都是原子，从而确保当两个客户同时访问 Redis 服务器得到的是更新后的值（最新值）。</li>
<li>MultiUtility工具：Redis是一个多功能实用工具，可以在很多如：缓存，消息传递队列中使用（Redis原生支持发布/订阅），在应用程序中，如：Web应用程序会话，网站页面点击数等任何短暂的数据；</li>
</ul>
<h3 id="2-redis中数据结构"><a href="#2-redis中数据结构" class="headerlink" title="2.redis中数据结构"></a>2.redis中数据结构</h3><p>5种:string list set hash zset</p>
<h3 id="3-事务"><a href="#3-事务" class="headerlink" title="3.事务"></a>3.事务</h3><p>Redis事务允许一组命令在单一步骤中执行。事务有两个属性，说明如下：</p>
<ul>
<li>在一个事务中的所有命令作为单个独立的操作顺序执行。在Redis事务中的执行过程中而另一客户机发出的请求，这是不可以的；</li>
<li>Redis事务是原子的。原子意味着要么所有的命令都执行，要么都不执行；</li>
</ul>
<p>Redis 事务由指令 MULTI 发起的，之后传递需要在事务中和整个事务中，最后由 EXEC 命令执行所有命令的列表。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">redis 127.0.0.1:6379&gt; MULTI</div><div class="line">OK</div><div class="line">redis 127.0.0.1:6379&gt; SET tutorial redis</div><div class="line">QUEUED</div><div class="line">redis 127.0.0.1:6379&gt; GET tutorial</div><div class="line">QUEUED</div><div class="line">redis 127.0.0.1:6379&gt; INCR visitors</div><div class="line">QUEUED</div><div class="line">redis 127.0.0.1:6379&gt; EXEC</div><div class="line"></div><div class="line">1) OK</div><div class="line">2) &quot;redis&quot;</div><div class="line">3) (integer) 1</div></pre></td></tr></table></figure>
<h3 id="4-持久化"><a href="#4-持久化" class="headerlink" title="4.持久化"></a>4.持久化</h3><p>Redis提供两种不同的持久化方法来将数据存储到硬盘里面。一种方法叫快照，它可以将存在于某一时刻的所有数据都写入硬盘里面。另一种方法叫只追加文件（AOF)，它会在执行写命令时，将被执行的写命令复制到硬盘里面。这两种持久化方法既可以同时使用，又可以单独使用，在某些情况下甚至两种方法都不是用，具体选择哪种持久化方法需要根据用户的数据以及应用来决定。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.yiibai.com/redis/redis_quick_guide.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.yiibai.com/redis/redis_quick_guide
    
    </summary>
    
    
      <category term="hadoop" scheme="http://yoursite.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper</title>
    <link href="http://yoursite.com/2016/12/24/zookeeper/"/>
    <id>http://yoursite.com/2016/12/24/zookeeper/</id>
    <published>2016-12-24T02:37:01.000Z</published>
    <updated>2016-12-24T04:35:29.629Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://cailin.iteye.com/blog/2014486/" target="_blank" rel="external">http://cailin.iteye.com/blog/2014486/</a></p>
<p>ps：未完待续</p>
<p>ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，它包含一个简单的原语集，分布式应用程序可以基于它<strong>实现同步服务，配置维护和命名服务</strong>等。Zookeeper是hadoop的一个子项目，其发展历程无需赘述。在分布式应用中，由于工程师不能很好地使用锁机制，以及基于消息的协调机制不适合在某些应用中使用，因此需要有一种可靠的、可扩展的、分布式的、可配置的协调机制来统一系统的状态。Zookeeper的目的就在于此。本文简单分析zookeeper的工作原理，对于如何使用zookeeper不是本文讨论的重点。</p>
<p>Zookeeper 从设计模式角度来看，是一个基于观察者模式设计的分布式服务管理框。</p>
<p>功能：</p>
<ul>
<li>统一命名服务（Name Service）：<br>分布式应用中，通常需要有一套完整的命名规则，既能够产生唯一的名称又便于人识别和记住。<br>Name Service 已经是 Zookeeper 内置的功能，你只要调用 Zookeeper 的 API 就能实现。如调用 create 接口就可以很容易创建一个目录节点。</li>
<li>配置管理</li>
<li>集群管理</li>
</ul>
<h4 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h4><p>Zookeeper中的角色主要有以下三类，如下表所示：<br><img src="http://i.imgur.com/NxWbDV8.jpg" alt=""></p>
<h4 id="设计目的"><a href="#设计目的" class="headerlink" title="设计目的"></a>设计目的</h4><p>1.最终一致性：client不论连接到哪个Server，展示给它都是同一个视图，这是zookeeper最重要的性能。</p>
<p>2 .可靠性：具有简单、健壮、良好的性能，如果消息m被到一台服务器接受，那么它将被所有的服务器接受。</p>
<p>3 .实时性：Zookeeper保证客户端将在一个时间间隔范围内获得服务器的更新信息，或者服务器失效的信息。但由于网络延时等原因，Zookeeper不能保证两个客户端能同时得到刚更新的数据，如果需要最新数据，应该在读数据之前调用sync()接口。</p>
<p>4 .等待无关（wait-free）：慢的或者失效的client不得干预快速的client的请求，使得每个client都能有效的等待。</p>
<p>5.原子性：更新只能成功或者失败，没有中间状态。</p>
<p>6 .顺序性：包括全局有序和偏序两种：全局有序是指如果在一台服务器上消息a在消息b前发布，则在所有Server上消息a都将在消息b前被发布；偏序是指如果一个消息b在消息a后被同一个发送者发布，a必将排在b前面。</p>
<h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><p>Zookeeper的核心是原子广播，这个机制保证了各个Server之间的同步。实现这个机制的协议叫做Zab协议。Zab协议有两种模式，它们分别是恢复模式（选主）和广播模式（同步）。当服务启动或者在领导者崩溃后，Zab就进入了恢复模式，当领导者被选举出来，且大多数Server完成了和leader的状态同步以后，恢复模式就结束了。状态同步保证了leader和Server具有相同的系统状态。</p>
<p>为了保证事务的顺序一致性，zookeeper采用了递增的事务id号（zxid）来标识事务。所有的提议（proposal）都在被提出的时候加上了zxid。实现中zxid是一个64位的数字，它高32位是epoch用来标识leader关系是否改变，每次一个leader被选出来，它都会有一个新的epoch，标识当前属于那个leader的统治时期。低32位用于递增计数。</p>
<p>每个Server在工作过程中有三种状态：</p>
<ul>
<li>LOOKING：当前Server不知道leader是谁，正在搜寻</li>
<li>LEADING：当前Server即为选举出来的leader</li>
<li>FOLLOWING：leader已经选举出来，当前Server与之同步</li>
</ul>
<h4 id="选主流程"><a href="#选主流程" class="headerlink" title="选主流程"></a>选主流程</h4><p>当leader崩溃或者leader失去大多数的follower，这时候zk进入恢复模式，恢复模式需要重新选举出一个新的leader，让所有的Server都恢复到一个正确的状态。Zk的选举算法有两种：一种是基于basic paxos实现的，另外一种是基于fast paxos算法实现的。系统默认的选举算法为fast paxos。先介绍basic paxos流程：</p>
<ol>
<li><p>选举线程由当前Server发起选举的线程担任，其主要功能是对投票结果进行统计，并选出推荐的Server；</p>
</li>
<li><p>选举线程首先向所有Server发起一次询问(包括自己)；</p>
</li>
<li><p>选举线程收到回复后，验证是否是自己发起的询问(验证zxid是否一致)，然后获取对方的id(myid)，并存储到当前询问对象列表中，最后获取对方提议的leader相关信息(id,zxid)，并将这些信息存储到当次选举的投票记录表中；</p>
</li>
<li><p>收到所有Server回复以后，就计算出zxid最大的那个Server，并将这个Server相关信息设置成下一次要投票的Server；</p>
</li>
<li><p>线程将当前zxid最大的Server设置为当前Server要推荐的Leader，如果此时获胜的Server获得n/2 + 1的Server票数， 设置当前推荐的leader为获胜的Server，将根据获胜的Server相关信息设置自己的状态，否则，继续这个过程，直到leader被选举出来。</p>
</li>
</ol>
<p>通过流程分析我们可以得出：要使Leader获得多数Server的支持，则Server总数必须是奇数2n+1，且<strong>存活的Server的数目不得少于n+1</strong>.</p>
<p>每个Server启动后都会重复以上流程。在恢复模式下，如果是刚从崩溃状态恢复的或者刚启动的server还会从磁盘快照中恢复数据和会话信息，zk会记录事务日志并定期进行快照，方便在恢复时进行状态恢复。选主的具体流程图如下所示：<br><img src="http://i.imgur.com/Vbcg5ge.jpg" alt=""></p>
<p>fast paxos流程是在选举过程中，某Server首先向所有Server提议自己要成为leader，当其它Server收到提议以后，解决epoch和zxid的冲突，并接受对方的提议，然后向对方发送接受提议完成的消息，重复这个流程，最后一定能选举出Leader。其流程图如下所示：</p>
<p><img src="http://i.imgur.com/6faX072.jpg" alt=""></p>
<h4 id="同步过程"><a href="#同步过程" class="headerlink" title="同步过程"></a>同步过程</h4><p>选完leader以后，zk就进入状态同步过程。</p>
<ol>
<li><p>leader等待server连接；</p>
</li>
<li><p>Follower连接leader，将最大的zxid发送给leader；</p>
</li>
<li><p>Leader根据follower的zxid确定同步点；</p>
</li>
<li><p>完成同步后通知follower 已经成为uptodate状态；</p>
</li>
<li><p>Follower收到uptodate消息后，又可以重新接受client的请求进行服务了</p>
</li>
</ol>
<p><img src="http://i.imgur.com/uOAy55a.jpg" alt=""></p>
<h4 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h4><p>leader工作流程：</p>
<p>Leader主要有三个功能：</p>
<ol>
<li>恢复数据；</li>
<li>维持与Learner的心跳，接收Learner请求并判断Learner的请求消息类型；</li>
<li>Learner的消息类型主要有PING消息、REQUEST消息、ACK消息、REVALIDATE消息，根据不同的消息类型，进行不同的处理。</li>
</ol>
<p>PING消息是指Learner的心跳信息；REQUEST消息是Follower发送的提议信息，包括写请求及同步请求；ACK消息是Follower的对提议的回复，超过半数的Follower通过，则commit该提议；REVALIDATE消息是用来延长SESSION有效时间。</p>
<p>follower工作流程<br>Follower主要有四个功能：</p>
<ol>
<li>向Leader发送请求（PING消息、REQUEST消息、ACK消息、REVALIDATE消息）；</li>
<li>接收Leader消息并进行处理；</li>
<li>接收Client的请求，如果为写请求，发送给Leader进行投票；</li>
<li>返回Client结果。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://cailin.iteye.com/blog/2014486/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cailin.iteye.com/blog/2014486/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ps：未完待续&lt;/
    
    </summary>
    
    
      <category term="hadoop" scheme="http://yoursite.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>pat1009</title>
    <link href="http://yoursite.com/2016/12/23/pat1009/"/>
    <id>http://yoursite.com/2016/12/23/pat1009/</id>
    <published>2016-12-23T04:06:37.000Z</published>
    <updated>2016-12-23T04:11:46.149Z</updated>
    
    <content type="html"><![CDATA[<p>1009.Product of Polynomials (25)</p>
<p>This time, you are supposed to find A*B where A and B are two polynomials.</p>
<p>Input Specification:</p>
<p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial: K N1 aN1 N2 aN2 … NK aNK, where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1, 2, …, K) are the exponents and coefficients, respectively. It is given that 1 &lt;= K &lt;= 10, 0 &lt;= NK &lt; … &lt; N2 &lt; N1 &lt;=1000.</p>
<p>Output Specification:</p>
<p>For each test case you should output the product of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate up to 1 decimal place.</p>
<p>Sample Input</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">2 1 2.4 0 3.2</div><div class="line">2 2 1.5 1 0.5</div></pre></td></tr></table></figure>
<p>Sample Output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">3 3 3.6 2 6.0 1 1.6</div></pre></td></tr></table></figure>
<p>思路：正常按照多项式乘法计算就行，注意如果系数是0，那么这一项就是0.运算的时候要过滤到该项。</p>
<p>解答：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t9_2</span> </span>&#123;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">double</span>[] a= <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">1004</span>];</div><div class="line">	<span class="keyword">static</span> <span class="keyword">double</span>[] b= <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">1004</span>];</div><div class="line">	<span class="keyword">static</span> <span class="keyword">double</span>[] c= <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">1004</span>*<span class="number">1004</span>];</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span> n1,n2;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Scanner sc= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">		n1=sc.nextInt();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n1;i++)&#123;</div><div class="line">			<span class="keyword">int</span> e=sc.nextInt();</div><div class="line">			<span class="keyword">double</span> c=sc.nextDouble();</div><div class="line">			a[e]=c;</div><div class="line">		</div><div class="line">		&#125;</div><div class="line">		n2=sc.nextInt();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n2;i++)&#123;</div><div class="line">			<span class="keyword">int</span> e=sc.nextInt();</div><div class="line">			<span class="keyword">double</span> c=sc.nextDouble();</div><div class="line">			b[e]=c;</div><div class="line">		&#125;</div><div class="line">		sc.close();</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(a[i]!=<span class="number">0</span>)&#123;</div><div class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;b.length;j++)&#123;</div><div class="line">					<span class="keyword">if</span>(b[j]!=<span class="number">0</span>)&#123;</div><div class="line">						c[i+j]+=a[i]*b[j];</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;			</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> count=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;c.length;i++) <span class="keyword">if</span>(c[i]!=<span class="number">0</span>) count++;</div><div class="line">		System.out.print(count);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=c.length-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--) </div><div class="line">			<span class="keyword">if</span>(c[i]!=<span class="number">0</span>) &#123;</div><div class="line">				System.out.print(<span class="string">" "</span>+i+<span class="string">" "</span>);</div><div class="line">				System.out.printf(<span class="string">"%.1f"</span>,c[i]);</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1009.Product of Polynomials (25)&lt;/p&gt;
&lt;p&gt;This time, you are supposed to find A*B where A and B are two polynomials.&lt;/p&gt;
&lt;p&gt;Input Specifica
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>pat1008</title>
    <link href="http://yoursite.com/2016/12/22/pat1008/"/>
    <id>http://yoursite.com/2016/12/22/pat1008/</id>
    <published>2016-12-22T05:17:29.000Z</published>
    <updated>2016-12-22T05:21:56.569Z</updated>
    
    <content type="html"><![CDATA[<p>1008.Elevator (20)</p>
<p>The highest building in our city has only one elevator. A request list is made up with N positive numbers. The numbers denote at which floors the elevator will stop, in specified order. It costs 6 seconds to move the elevator up one floor, and 4 seconds to move down one floor. The elevator will stay for 5 seconds at each stop.</p>
<p>For a given request list, you are to compute the total time spent to fulfill the requests on the list. The elevator is on the 0th floor at the beginning and does not have to return to the ground floor when the requests are fulfilled.</p>
<p>Input Specification:</p>
<p>Each input file contains one test case. Each case contains a positive integer N, followed by N positive numbers. All the numbers in the input are less than 100.</p>
<p>Output Specification:</p>
<p>For each test case, print the total time on a single line.</p>
<p>Sample Input:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">3 2 3 1</div></pre></td></tr></table></figure></p>
<p>Sample Output:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">41</div></pre></td></tr></table></figure></p>
<p>解答：直接计算就可以。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t8</span> </span>&#123;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span> n=<span class="number">0</span>,sum=<span class="number">0</span>;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span>[] a;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Scanner sc= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">		n=sc.nextInt();</div><div class="line">		a=<span class="keyword">new</span> <span class="keyword">int</span>[n];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</div><div class="line">			a[i]=sc.nextInt();</div><div class="line">			<span class="keyword">if</span>(i==<span class="number">0</span>)</div><div class="line">				sum+=<span class="number">6</span>*a[i];</div><div class="line">			<span class="keyword">else</span></div><div class="line">				sum=a[i]&gt;a[i-<span class="number">1</span>]?sum+(a[i]-a[i-<span class="number">1</span>])*<span class="number">6</span>:sum+(a[i-<span class="number">1</span>]-a[i])*<span class="number">4</span>;			</div><div class="line">		&#125;</div><div class="line">		sc.close();</div><div class="line">		sum+=n*<span class="number">5</span>;</div><div class="line">		System.out.println(sum);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1008.Elevator (20)&lt;/p&gt;
&lt;p&gt;The highest building in our city has only one elevator. A request list is made up with N positive numbers. The 
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>mapReduce工作原理</title>
    <link href="http://yoursite.com/2016/12/21/mapReduce%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86/"/>
    <id>http://yoursite.com/2016/12/21/mapReduce工作原理/</id>
    <published>2016-12-21T13:44:43.000Z</published>
    <updated>2016-12-22T14:00:12.613Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-mapreduce框架结构"><a href="#1-mapreduce框架结构" class="headerlink" title="1.mapreduce框架结构"></a>1.mapreduce框架结构</h3><p>mapreduce是一个用于大规模数据处理的分布式计算模型。</p>
<p>mapper：主要负责对数据进行分析处理，最终转化为key-value的数据结构。<br>reducer：主要是获取mapper出来的结果，对结果进行统计。</p>
<p><img src="http://i.imgur.com/p3Tu8Wr.png" alt=""></p>
<ol>
<li>mapper和reducer</li>
<li>jobtracker：jobtracker是一个master服务，软件启动后，tracker接受job，负责调度job的每一个子任务运行于tasktracker上，并监控。如果发现失败的task，就重启他们。</li>
<li>tasktracker：运行在多个节点的slaver服务，tasktracker主动与jobtracker通信（通过心跳实现）来接收作业。并负责直接执行每个任务。</li>
<li>jobclient</li>
<li>每一个job都会在用户端通过jobclient类将应用程序级configuration打包成jar存储在hdfs上，并把路径提交给jobtracker的master服务，然后由master创建每一个task将他们分给各个tasktracker服务中心去执行。</li>
<li>jobinprogress：jobclient提交job后，jobtracker创建一个jobinprogress来跟踪和调度这个job，并把它添加到job队列中。</li>
<li>jontracker启动任务task对象序列化写入相应的tasktracker中。tasktracker收到创建taskinprogress，用来监控和调度task。</li>
<li>maptask和reducetask，一个完整的job会自动执行mapper combine reducer。</li>
</ol>
<h3 id="2-mapreduce运行原理"><a href="#2-mapreduce运行原理" class="headerlink" title="2.mapreduce运行原理"></a>2.mapreduce运行原理</h3><p><img src="http://i.imgur.com/UllRps9.png" alt=""></p>
<ul>
<li>jobtracker调用getnewjobid（）请求一个新作业id</li>
<li>检查作业输出说明，没有指定或者已经存在，返回到mr程序</li>
<li>计算作业的输出划分，失败返回mr程序</li>
<li>将运行资源（jar configuration文件 输入划分）复制到jobtracker文件系统中一个以作业id命名的目录中。</li>
<li>调用jobtracker的submitjob方法</li>
<li>将任务放在调度器中，并初始化任务。</li>
<li>创建运行任务列表，首先根据输入划分来确定map任务个数，再根据jobconf中mapred。reduce.tasks确定reduce个数。</li>
<li>tasktracker执行循环，定期发送心跳告诉jobtracker，是否存活。同时充当消息通道。</li>
</ul>
<ul>
<li>作业的提交 </li>
<li>作业的初始化<img src="http://i.imgur.com/etHGgpb.png" alt=""></li>
<li>任务分配</li>
<li>任务的执行</li>
<li>进度和状态的更新</li>
<li>mapreduce的进度组成</li>
<li>任务完成</li>
</ul>
<h3 id="3-mapreduce容错"><a href="#3-mapreduce容错" class="headerlink" title="3.mapreduce容错"></a>3.mapreduce容错</h3><p>mapreduce容错主要考虑以下几点：</p>
<ul>
<li>任务失败</li>
<li>tasktracker失败</li>
<li>jobtracker失败</li>
<li>子任务失败</li>
<li>任务失败反复次数的处理</li>
</ul>
<p>1.任务失败：</p>
<ul>
<li>mapreduce代码有问题—&gt;子任务jvm在推出前向上一级tasktracker提交错误报告，记录在用户错误日志中，并将本次task attemp 标记failed。释放任务槽slot</li>
<li>jvm错误—&gt;jvm的bug导致，将本次标记为failed。</li>
<li>不设置超时—&gt;不释放slot。降低性能</li>
</ul>
<p>2.tasktracker失败</p>
<p>tasktracker发送心跳包到jobtracker。tasktracker故障，心跳包停止或者很少发送，jobtracker将tasktracker从等待任务调度的tasktracker池中溢出。jobtracker会安排此tasktracker上一个成功运行的map任务返回。</p>
<ul>
<li>没有完成的作业，map任务失败。重新执行</li>
<li>reduce未完成， 执行reduce任务。</li>
</ul>
<p>3.jobtracker失败</p>
<p>jobtracker是存在单点故障的，失败就gg。 可以通过启动多个jobtracker，只运行一个主jobtracker。可以采用zookeeper作为jobtracker的协调机制。</p>
<p>4.子任务失败</p>
<p>一个mapreduce任务包含很多map和reduce任务。</p>
<ul>
<li>map或者reduce子任务代码异常—&gt;jvm进程向tasktracker发送错误报告，标记failed，释放slot，执行另一个。</li>
<li>对于刘任务，流进程以非零退出代码，标记failed</li>
<li>jvm退出，标记failed</li>
</ul>
<p>5.任务失败反复次数的处理方法</p>
<p>当map task执行失败后会重试，超过重试次数，整个job会失败。<br>重试次数可以配置在mapred-site.xml <code>mapred.max.failures.percent</code></p>
<h3 id="4-shuffle阶段-和sort阶段（未看完）"><a href="#4-shuffle阶段-和sort阶段（未看完）" class="headerlink" title="4.shuffle阶段 和sort阶段（未看完）"></a>4.shuffle阶段 和sort阶段（未看完）</h3><p>shuffle:指从map的输出开始，包括系统执行排序以及传送map输出到reduce的过程。</p>
<p>sort阶段：指map端输出的key进行排序。</p>
<h3 id="6-任务的执行"><a href="#6-任务的执行" class="headerlink" title="6.任务的执行"></a>6.任务的执行</h3><p>1.推测执行</p>
<p>问题：hadoop把任务分配给很多歌节点，可能有一些节点会限制程序的执行速度。别的任务都执行完了，却要等待这个节点慢慢的执行。怎么办？</p>
<p>方案：通过强迫任务独立运行于其他的任务，使得单个任务之间不会知道他们的输入数据来自哪里。对于相同的输入数据，我们可以并行多次处理来利用不同机器的负载能力，因为大部分任务都完成了，hadoop平台会在几个空闲的节点上调度执行剩余任务的赋值，这个过程叫做推测执行。任务完成时，向jobtracker报告。第一个完成的是权威赋值，其他没完成的就会被终止并且丢弃他们的输出。</p>
<p>2.任务jvm调用</p>
<p>mapred.job.reuse.jvm.num.tasks默认值为1，即每个task都新启动一个jvm来运行任务，当值是-1的时候，表示jvm可以无限重用。</p>
<p>针对数目巨大的task时，可以用jvm重用。</p>
<p>3.跳过坏的记录</p>
<p>数据的一些记录不符合怪烦，处理时跑出异常。mapreduce可以将这次记录标记为坏记录，重启任务时会跳过该记录。</p>
<p>默认是关闭的，通过<code>mapred.map.max.attemps</code>和<code>mapred.reduce.max.attemps</code>设置</p>
<p>4.任务执行的环境</p>
<p>通过某些环境属性得知作业和任务的信息。<br><img src="http://i.imgur.com/27YtRlh.png" alt=""></p>
<h3 id="7-作业调度器"><a href="#7-作业调度器" class="headerlink" title="7.作业调度器"></a>7.作业调度器</h3><ul>
<li>先进先出调度器</li>
<li>容量调度器</li>
<li>公平调度器</li>
<li>自定义hadoop调度器</li>
</ul>
<p>细节略，参考hadoop应用开发技术详解</p>
<h3 id="8-yarn"><a href="#8-yarn" class="headerlink" title="8.yarn"></a>8.yarn</h3><p>略</p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>本文主要介绍了mapreduce的工作原理，主要讲解了jobtracker tasktracker 任务调度 任务工作原理 级shuffle和sort机制。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-mapreduce框架结构&quot;&gt;&lt;a href=&quot;#1-mapreduce框架结构&quot; class=&quot;headerlink&quot; title=&quot;1.mapreduce框架结构&quot;&gt;&lt;/a&gt;1.mapreduce框架结构&lt;/h3&gt;&lt;p&gt;mapreduce是一个用于大规模数
    
    </summary>
    
    
      <category term="hadoop" scheme="http://yoursite.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>pat1007</title>
    <link href="http://yoursite.com/2016/12/21/pat1007/"/>
    <id>http://yoursite.com/2016/12/21/pat1007/</id>
    <published>2016-12-21T11:19:17.000Z</published>
    <updated>2016-12-21T11:23:22.453Z</updated>
    
    <content type="html"><![CDATA[<p>Given a sequence of K integers { N1, N2, …, NK }. A continuous subsequence is defined to be { Ni, Ni+1, …, Nj } where 1 &lt;= i &lt;= j &lt;= K. The Maximum Subsequence is the continuous subsequence which has the largest sum of its elements. For example, given sequence { -2, 11, -4, 13, -5, -2 }, its maximum subsequence is { 11, -4, 13 } with the largest sum being 20.</p>
<p>Now you are supposed to find the largest sum, together with the first and the last numbers of the maximum subsequence.</p>
<p>Input Specification:</p>
<p>Each input file contains one test case. Each case occupies two lines. The first line contains a positive integer K (&lt;= 10000). The second line contains K numbers, separated by a space.</p>
<p>Output Specification:</p>
<p>For each test case, output in one line the largest sum, together with the first and the last numbers of the maximum subsequence. The numbers must be separated by one space, but there must be no extra space at the end of a line. In case that the maximum subsequence is not unique, output the one with the smallest indices i and j (as shown by the sample case). If all the K numbers are negative, then its maximum sum is defined to be 0, and you are supposed to output the first and the last numbers of the whole sequence.</p>
<p>Sample Input:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">10</div><div class="line">-10 1 2 3 4 -5 -23 3 7 -21</div></pre></td></tr></table></figure>
<p>Sample Output:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">10 1 4</div></pre></td></tr></table></figure>
<p>思路：问一段连续子序列的最大和是多少，顺便记录下左端和右端。<br>注意<strong>the first and the last numbers of the maximum subsequence</strong>是值不是下标index！ 最开始看错了。。。</p>
<p>解法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t7</span> </span>&#123;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span> n;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span>[] arr;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Scanner sc= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">		n=sc.nextInt();</div><div class="line">		arr=<span class="keyword">new</span> <span class="keyword">int</span>[n];</div><div class="line">		<span class="keyword">boolean</span> flag=<span class="keyword">false</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</div><div class="line">			arr[i]=sc.nextInt();</div><div class="line">			<span class="keyword">if</span>(arr[i]&gt;=<span class="number">0</span>) flag=<span class="keyword">true</span>;</div><div class="line">		&#125;</div><div class="line">		sc.close();</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> sum=<span class="number">0</span>,max=-<span class="number">1</span>,l=<span class="number">0</span>,maxL=<span class="number">0</span>,maxR=<span class="number">0</span>;</div><div class="line">		<span class="keyword">if</span>(!flag) </div><div class="line">			System.out.println(<span class="string">"0"</span>+<span class="string">" "</span>+arr[<span class="number">0</span>]+<span class="string">" "</span>+arr[n-<span class="number">1</span>]);</div><div class="line">		<span class="keyword">else</span>&#123;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</div><div class="line">				<span class="keyword">if</span>(arr[i]&gt;=<span class="number">0</span>) l=arr[i];</div><div class="line">				<span class="keyword">while</span>(i&lt;n&amp;&amp;sum+arr[i]&gt;=<span class="number">0</span>)&#123;</div><div class="line">					sum+=arr[i];</div><div class="line">					<span class="keyword">if</span>(sum&gt;max) &#123;max=sum;maxL=l;maxR=arr[i];&#125;</div><div class="line">					i++;</div><div class="line">				&#125;</div><div class="line">				sum=<span class="number">0</span>;</div><div class="line">			&#125;</div><div class="line">			System.out.print(max+<span class="string">" "</span>+maxL+<span class="string">" "</span>+maxR);</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">			</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Given a sequence of K integers { N1, N2, …, NK }. A continuous subsequence is defined to be { Ni, Ni+1, …, Nj } where 1 &amp;lt;= i &amp;lt;= j &amp;
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>pat1006</title>
    <link href="http://yoursite.com/2016/12/21/pat1006/"/>
    <id>http://yoursite.com/2016/12/21/pat1006/</id>
    <published>2016-12-21T06:11:10.000Z</published>
    <updated>2016-12-21T06:13:17.811Z</updated>
    
    <content type="html"><![CDATA[<p>1006.Sign In and Sign Out (25)</p>
<p>At the beginning of every day, the first person who signs in the computer room will unlock the door, and the last one who signs out will lock the door. Given the records of signing in’s and out’s, you are supposed to find the ones who have unlocked and locked the door on that day.</p>
<p>Input Specification:</p>
<p>Each input file contains one test case. Each case contains the records for one day. The case starts with a positive integer M, which is the total number of records, followed by M lines, each in the format:</p>
<p>ID_number Sign_in_time Sign_out_time<br>where times are given in the format HH:MM:SS, and ID number is a string with no more than 15 characters.</p>
<p>Output Specification:</p>
<p>For each test case, output in one line the ID numbers of the persons who have unlocked and locked the door on that day. The two ID numbers must be separated by one space.</p>
<p>Note: It is guaranteed that the records are consistent. That is, the sign in time must be earlier than the sign out time for each person, and there are no two persons sign in or out at the same moment.</p>
<p>Sample Input:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">3</div><div class="line">CS301111 15:30:28 17:00:10</div><div class="line">SC3021234 08:00:00 11:25:25</div><div class="line">CS301133 21:45:00 21:58:40</div></pre></td></tr></table></figure>
<p>Sample Output:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SC3021234 CS301133</div></pre></td></tr></table></figure>
<p>直接查找最大最小值就行。</p>
<p>解答：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t6</span> </span>&#123;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">da</span><span class="params">(String x,String y)</span></span>&#123;</div><div class="line">		String[] xx=x.split(<span class="string">":"</span>);</div><div class="line">		String[] yy=y.split(<span class="string">":"</span>);</div><div class="line">		<span class="keyword">return</span> Integer.valueOf(xx[<span class="number">0</span>])&gt;Integer.valueOf(yy[<span class="number">0</span>])? <span class="keyword">true</span>:(Integer.valueOf(xx[<span class="number">1</span>])&gt;Integer.valueOf(yy[<span class="number">1</span>])?<span class="keyword">true</span>:(Integer.valueOf(xx[<span class="number">2</span>])&gt;Integer.valueOf(yy[<span class="number">2</span>])?<span class="keyword">true</span>:<span class="keyword">false</span>));</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">xiao</span><span class="params">(String x,String y)</span></span>&#123;</div><div class="line">		String[] xx=x.split(<span class="string">":"</span>);</div><div class="line">		String[] yy=y.split(<span class="string">":"</span>);</div><div class="line">		<span class="keyword">return</span> Integer.valueOf(xx[<span class="number">0</span>])&lt;Integer.valueOf(yy[<span class="number">0</span>])? <span class="keyword">true</span>:(Integer.valueOf(xx[<span class="number">1</span>])&lt;Integer.valueOf(yy[<span class="number">1</span>])?<span class="keyword">true</span>:(Integer.valueOf(xx[<span class="number">2</span>])&lt;Integer.valueOf(yy[<span class="number">2</span>])?<span class="keyword">true</span>:<span class="keyword">false</span>));</div><div class="line">	&#125;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">	</div><div class="line">	Scanner sc= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">	<span class="keyword">int</span> n=sc.nextInt();</div><div class="line">	String[] ids = <span class="keyword">new</span> String[n];</div><div class="line">	String[] ins=<span class="keyword">new</span> String[n];</div><div class="line">	String[] outs=<span class="keyword">new</span> String[n];</div><div class="line">	</div><div class="line">	</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</div><div class="line">		ids[i]=sc.next();</div><div class="line">		ins[i]=sc.next();</div><div class="line">		outs[i]=sc.next();</div><div class="line">	&#125;</div><div class="line">	sc.close();</div><div class="line">	<span class="keyword">int</span> t1=<span class="number">0</span>;</div><div class="line">	<span class="keyword">int</span> t2=<span class="number">0</span>;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</div><div class="line">		<span class="keyword">if</span>(xiao(ins[i],ins[t1]))&#123;</div><div class="line">			t1=i;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(da(outs[i],outs[t2]))&#123;</div><div class="line">			t2=i;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	System.out.print(ids[t1]+<span class="string">" "</span>+ids[t2]);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1006.Sign In and Sign Out (25)&lt;/p&gt;
&lt;p&gt;At the beginning of every day, the first person who signs in the computer room will unlock the door
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>pat1005</title>
    <link href="http://yoursite.com/2016/12/21/pat1005/"/>
    <id>http://yoursite.com/2016/12/21/pat1005/</id>
    <published>2016-12-21T06:04:21.000Z</published>
    <updated>2016-12-21T06:10:52.114Z</updated>
    
    <content type="html"><![CDATA[<p>1005.Spell It Right (20)</p>
<p>Given a non-negative integer N, your task is to compute the sum of all the digits of N, and output every digit of the sum in English.</p>
<p>Input Specification:</p>
<p>Each input file contains one test case. Each case occupies one line which contains an N (&lt;= 10100).</p>
<p>Output Specification:</p>
<p>For each test case, output in one line the digits of the sum in English words. There must be one space between two consecutive words, but no extra space at the end of a line.</p>
<p>Sample Input:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">12345</div></pre></td></tr></table></figure>
<p>Sample Output:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">one five</div></pre></td></tr></table></figure>
<p>思路：读入一串数字，然后相加打印。注意读入采用string，入股直接读入一个int，会越界，超过int最大值。</p>
<p>编程;</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t5</span> </span>&#123;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">	String[] s=&#123;</div><div class="line">				<span class="string">"zero"</span>,<span class="string">"one"</span>,<span class="string">"two"</span>,<span class="string">"three"</span>,<span class="string">"four"</span>,<span class="string">"five"</span>,<span class="string">"six"</span>,<span class="string">"seven"</span>,<span class="string">"eight"</span>,<span class="string">"nine"</span></div><div class="line">	&#125;;</div><div class="line">	 Scanner sc= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">	 String a=sc.next();</div><div class="line">	 <span class="keyword">if</span>(a.equals(<span class="string">"0"</span>))&#123;</div><div class="line">		 System.out.println(<span class="string">"zero"</span>);</div><div class="line">		 <span class="keyword">return</span> ;</div><div class="line">	 &#125;</div><div class="line">	 sc.close();</div><div class="line">	 <span class="keyword">int</span> sum=<span class="number">0</span>;</div><div class="line">	 <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;a.length();i++)&#123;</div><div class="line">		sum+=a.charAt(i)-<span class="string">'0'</span>;</div><div class="line">	 &#125;</div><div class="line">	 List&lt;String&gt; ss=<span class="keyword">new</span> ArrayList&lt;String&gt;(); </div><div class="line">	 <span class="keyword">while</span>(sum!=<span class="number">0</span>)&#123;</div><div class="line">		 ss.add(s[sum%<span class="number">10</span>]);</div><div class="line">		 sum=sum/<span class="number">10</span>;</div><div class="line">	 &#125;</div><div class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> j=ss.size()-<span class="number">1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</div><div class="line">		<span class="keyword">if</span>(j==ss.size()-<span class="number">1</span>) System.out.print(ss.get(j));</div><div class="line">		<span class="keyword">else</span> System.out.print(<span class="string">" "</span>+ss.get(j));</div><div class="line">	&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1005.Spell It Right (20)&lt;/p&gt;
&lt;p&gt;Given a non-negative integer N, your task is to compute the sum of all the digits of N, and output every 
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>pat1004</title>
    <link href="http://yoursite.com/2016/12/21/pat1004/"/>
    <id>http://yoursite.com/2016/12/21/pat1004/</id>
    <published>2016-12-21T05:53:50.000Z</published>
    <updated>2016-12-21T06:01:13.219Z</updated>
    
    <content type="html"><![CDATA[<p>1004.Counting Leaves (30)</p>
<p>A family hierarchy is usually presented by a pedigree tree. Your job is to count those family members who have no child.<br>Input</p>
<p>Each input file contains one test case. Each case starts with a line containing 0 &lt; N &lt; 100, the number of nodes in a tree, and M (&lt; N), the number of non-leaf nodes. Then M lines follow, each in the format:</p>
<p>ID K ID[1] ID[2] … ID[K]</p>
<p>where ID is a two-digit number representing a given non-leaf node, K is the number of its children, followed by a sequence of two-digit ID’s of its children. For the sake of simplicity, let us fix the root ID to be 01.<br>Output</p>
<p>For each test case, you are supposed to count those family members who have no child for every seniority level starting from the root. The numbers must be printed in a line, separated by a space, and there must be no extra space at the end of each line.</p>
<p>The sample case represents a tree with only 2 nodes, where 01 is the root and 02 is its only child. Hence on the root 01 level, there is 0 leaf node; and on the next level, there is 1 leaf node. Then we should output “0 1” in a line.</p>
<p>Sample Input</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">2 1</div><div class="line">01 1 02</div></pre></td></tr></table></figure>
<p>Sample Output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">0 1</div></pre></td></tr></table></figure>
<p>题意解读：求出每一层叶子节点的个数。可以利用广搜（用queue）来遍历，然后每一层高度上统计叶子节点个数。</p>
<p>节点连接关系采用一个邻接矩阵来存储。<br>采用一个数组记录节点列表。<br>visited数组记录该几点是否被访问过（如果图是单向的话，本题中好像不需要其实）<br>heights数组记录每个节点在树的高度。counts记录每一层高度叶子节点的个数。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.ArrayDeque;</div><div class="line"><span class="keyword">import</span> java.util.Queue;</div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t4</span> </span>&#123;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span> n,m;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span>[][] mtx=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>][<span class="number">100</span>];</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span>[] vertexs= <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];</div><div class="line">	<span class="keyword">static</span> <span class="keyword">boolean</span>[] visited=<span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">100</span>];</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span>[] heights=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span>[] counts=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;		</div><div class="line">		Scanner sc= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">		n=sc.nextInt();</div><div class="line">		m=sc.nextInt();</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</div><div class="line">			String id= sc.next();</div><div class="line">			vertexs[Integer.valueOf(id)]=Integer.valueOf(id);</div><div class="line">			<span class="keyword">int</span> k=sc.nextInt();</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;k;j++)&#123;</div><div class="line">				String kid=sc.next();</div><div class="line">				vertexs[Integer.valueOf(kid)]=Integer.valueOf(kid);</div><div class="line">				mtx[Integer.valueOf(id)][Integer.valueOf(kid)]=<span class="number">1</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		sc.close();</div><div class="line">		</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;vertexs.length;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(vertexs[i]==<span class="number">0</span>)&#123;</div><div class="line">				visited[i]=<span class="keyword">true</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		visited[<span class="number">1</span>]=<span class="keyword">true</span>;</div><div class="line">		bfs(<span class="number">1</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=height;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(i==height)&#123;</div><div class="line">				System.out.print(counts[i]);</div><div class="line">			&#125;<span class="keyword">else</span>&#123;</div><div class="line">				System.out.print(counts[i]+<span class="string">" "</span>);	</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span> height;</div><div class="line">	<span class="keyword">static</span> Queue&lt;Integer&gt; queue= <span class="keyword">new</span> ArrayDeque&lt;Integer&gt;();</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">bfs</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</div><div class="line">		height=heights[index];</div><div class="line">		<span class="keyword">boolean</span> tmp=<span class="keyword">false</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</div><div class="line">			<span class="keyword">if</span>(!visited[i]&amp;&amp;mtx[index][i]==<span class="number">1</span>)&#123;</div><div class="line">				tmp=<span class="keyword">true</span>;</div><div class="line">				queue.offer(vertexs[i]);</div><div class="line">				heights[i]=heights[index]+<span class="number">1</span>;</div><div class="line">				visited[i]=<span class="keyword">true</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(!tmp) counts[heights[index]]++;</div><div class="line">		</div><div class="line">		<span class="keyword">while</span>(!queue.isEmpty())&#123;</div><div class="line">			<span class="keyword">int</span> v=queue.remove();</div><div class="line">			bfs(v);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1004.Counting Leaves (30)&lt;/p&gt;
&lt;p&gt;A family hierarchy is usually presented by a pedigree tree. Your job is to count those family members wh
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>pat1002</title>
    <link href="http://yoursite.com/2016/12/20/pat1002/"/>
    <id>http://yoursite.com/2016/12/20/pat1002/</id>
    <published>2016-12-20T06:04:04.000Z</published>
    <updated>2016-12-20T06:08:28.398Z</updated>
    
    <content type="html"><![CDATA[<p>1002.A+B for Polynomials (25)</p>
<p>This time, you are supposed to find A+B where A and B are two polynomials.</p>
<p>Input</p>
<p>Each input file contains one test case. Each case occupies 2 lines, and each line contains the information of a polynomial: K N1 aN1 N2 aN2 … NK aNK, where K is the number of nonzero terms in the polynomial, Ni and aNi (i=1, 2, …, K) are the exponents and coefficients, respectively. It is given that 1 &lt;= K &lt;= 10，0 &lt;= NK &lt; … &lt; N2 &lt; N1 &lt;=1000.</p>
<p>Output</p>
<p>For each test case you should output the sum of A and B in one line, with the same format as the input. Notice that there must be NO extra space at the end of each line. Please be accurate to 1 decimal place.</p>
<p>Sample Input</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">2 1 2.4 0 3.2</div><div class="line">2 2 1.5 1 0.5</div></pre></td></tr></table></figure>
<p>Sample Output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">3 2 1.5 1 2.9 0 3.2</div></pre></td></tr></table></figure>
<p>解答：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t2_2</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		<span class="keyword">int</span> max=<span class="number">1000</span>+<span class="number">10</span>;</div><div class="line">		<span class="keyword">double</span>[] arr=<span class="keyword">new</span> <span class="keyword">double</span>[max];</div><div class="line">		<span class="keyword">int</span> n;</div><div class="line">		Scanner sc= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>;i++)&#123;</div><div class="line">			n=sc.nextInt();</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=n-<span class="number">1</span>;j&gt;=<span class="number">0</span>;j--)&#123;</div><div class="line">				<span class="keyword">int</span> e=sc.nextInt();</div><div class="line">				<span class="keyword">double</span> c=sc.nextDouble();</div><div class="line">				arr[e]+=c;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		sc.close();</div><div class="line">		<span class="keyword">int</span> cnt=<span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;max;i++) <span class="keyword">if</span>(arr[i]!=<span class="number">0</span>) cnt++;</div><div class="line">		System.out.print(cnt);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=max-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</div><div class="line">			<span class="keyword">if</span>(arr[i]!=<span class="number">0</span>)&#123;</div><div class="line">				System.out.print(<span class="string">" "</span>+i);</div><div class="line">				System.out.print(<span class="string">" "</span>);</div><div class="line">				System.out.printf(<span class="string">"%.1f"</span>,arr[i]);				</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		System.out.println();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>解答二：（估计有点小问题）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.ArrayList;</div><div class="line"><span class="keyword">import</span> java.util.List;</div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t2</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Scanner sc =<span class="keyword">new</span> Scanner(System.in);</div><div class="line">		<span class="keyword">int</span> n1=sc.nextInt();</div><div class="line">		<span class="keyword">int</span>[] e1=<span class="keyword">new</span> <span class="keyword">int</span>[n1];</div><div class="line">		<span class="keyword">double</span>[] c1=<span class="keyword">new</span> <span class="keyword">double</span>[n1];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n1;i++)&#123;</div><div class="line">			e1[i]=sc.nextInt();</div><div class="line">			c1[i]=sc.nextDouble();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> n2=sc.nextInt();</div><div class="line">		<span class="keyword">int</span>[] e2=<span class="keyword">new</span> <span class="keyword">int</span>[n2];</div><div class="line">		<span class="keyword">double</span>[] c2=<span class="keyword">new</span> <span class="keyword">double</span>[n2];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n2;i++)&#123;</div><div class="line">			e2[i]=sc.nextInt();</div><div class="line">			c2[i]=sc.nextDouble();</div><div class="line">		&#125;</div><div class="line">		sc.close();</div><div class="line">		<span class="keyword">int</span> i=<span class="number">0</span>,j=<span class="number">0</span>;</div><div class="line">		List&lt;Integer&gt; e=<span class="keyword">new</span> ArrayList&lt;Integer&gt;();</div><div class="line">		List&lt;Double&gt; c=<span class="keyword">new</span> ArrayList&lt;Double&gt;();</div><div class="line">		<span class="keyword">while</span>(i&lt;n1||j&lt;n2)&#123;</div><div class="line">			<span class="keyword">if</span>(i&gt;=n1&amp;&amp;j&lt;n2)&#123;</div><div class="line">				e.add(e2[j]);</div><div class="line">				c.add(c2[j]);</div><div class="line">				j++;</div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(i&lt;n1&amp;&amp;j&gt;=n2)&#123;</div><div class="line">				e.add(e1[i]);</div><div class="line">				c.add(c1[i]);</div><div class="line">				i++;</div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(e1[i]&gt;e2[j])&#123;</div><div class="line">				e.add(e1[i]);</div><div class="line">				c.add(c1[i]);</div><div class="line">				i++;</div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(e1[i]==e2[j])&#123;</div><div class="line">				e.add(e1[i]);</div><div class="line">				c.add(c1[i]+c2[j]);</div><div class="line">				i++;</div><div class="line">				j++;</div><div class="line">			&#125;<span class="keyword">else</span> <span class="keyword">if</span>(e1[i]&lt;e2[j])&#123;</div><div class="line">				e.add(e2[j]);</div><div class="line">				c.add(c2[j]);</div><div class="line">				j++;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		System.out.print(e.size());</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;e.size();k++)&#123;</div><div class="line">			System.out.print(<span class="string">" "</span>+e.get(k));</div><div class="line">			System.out.print(<span class="string">" "</span>+c.get(k));</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&#125;	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1002.A+B for Polynomials (25)&lt;/p&gt;
&lt;p&gt;This time, you are supposed to find A+B where A and B are two polynomials.&lt;/p&gt;
&lt;p&gt;Input&lt;/p&gt;
&lt;p&gt;Each 
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>pat1001</title>
    <link href="http://yoursite.com/2016/12/20/pat1001/"/>
    <id>http://yoursite.com/2016/12/20/pat1001/</id>
    <published>2016-12-20T06:03:53.000Z</published>
    <updated>2016-12-20T06:05:49.648Z</updated>
    
    <content type="html"><![CDATA[<p>1001.A+B Format (20)</p>
<p>Calculate a + b and output the sum in standard format – that is, the digits must be separated into groups of three by commas (unless there are less than four digits).</p>
<p>Input</p>
<p>Each input file contains one test case. Each case contains a pair of integers a and b where -1000000 &lt;= a, b &lt;= 1000000. The numbers are separated by a space.</p>
<p>Output</p>
<p>For each test case, you should output the sum of a and b in one line. The sum must be written in the standard format.</p>
<p>Sample Input</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-1000000 9</div></pre></td></tr></table></figure>
<p>Sample Output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-999,991</div></pre></td></tr></table></figure>
<p>解答</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t1</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Scanner sc=<span class="keyword">new</span> Scanner(System.in);</div><div class="line">		<span class="keyword">int</span> a=sc.nextInt();</div><div class="line">		<span class="keyword">int</span> b=sc.nextInt();</div><div class="line">		sc.close();</div><div class="line">		<span class="keyword">int</span> c=a+b;</div><div class="line">		<span class="keyword">if</span>(c&lt;<span class="number">0</span>)&#123;</div><div class="line">			c=-c;</div><div class="line">			System.out.printf(<span class="string">"-"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">if</span>(c&gt;=<span class="number">1000000</span>)</div><div class="line">			System.out.printf(<span class="string">"%d,%03d,%03d\n"</span>,c/<span class="number">1000000</span>,(c/<span class="number">1000</span>)%<span class="number">1000</span>,c%<span class="number">1000</span>);</div><div class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(c&gt;=<span class="number">1000</span>)</div><div class="line">			System.out.printf(<span class="string">"%d,%03d\n"</span>,c/<span class="number">1000</span>,c%<span class="number">1000</span>);</div><div class="line">		<span class="keyword">else</span></div><div class="line">			System.out.printf(<span class="string">"%d\n"</span>,c);	</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1001.A+B Format (20)&lt;/p&gt;
&lt;p&gt;Calculate a + b and output the sum in standard format – that is, the digits must be separated into groups of 
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>pat1003</title>
    <link href="http://yoursite.com/2016/12/20/pat1003/"/>
    <id>http://yoursite.com/2016/12/20/pat1003/</id>
    <published>2016-12-20T05:31:09.000Z</published>
    <updated>2016-12-20T05:34:59.030Z</updated>
    
    <content type="html"><![CDATA[<p>As an emergency rescue team leader of a city, you are given a special map of your country. The map shows several scattered cities connected by some roads. Amount of rescue teams in each city and the length of each road between any pair of cities are marked on the map. When there is an emergency call to you from some other city, your job is to lead your men to the place as quickly as possible, and at the mean time, call up as many hands on the way as possible.</p>
<p>Input</p>
<p>Each input file contains one test case. For each test case, the first line contains 4 positive integers: N (&lt;= 500) - the number of cities (and the cities are numbered from 0 to N-1), M - the number of roads, C1 and C2 - the cities that you are currently in and that you must save, respectively. The next line contains N integers, where the i-th integer is the number of rescue teams in the i-th city. Then M lines follow, each describes a road with three integers c1, c2 and L, which are the pair of cities connected by a road and the length of that road, respectively. It is guaranteed that there exists at least one path from C1 to C2.</p>
<p>Output</p>
<p>For each test case, print in one line two numbers: the number of different shortest paths between C1 and C2, and the maximum amount of rescue teams you can possibly gather.<br>All the numbers in a line must be separated by exactly one space, and there is no extra space allowed at the end of a line.</p>
<p>Sample Input<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">5 6 0 2</div><div class="line">1 2 1 5 3</div><div class="line">0 1 1</div><div class="line">0 2 2</div><div class="line">0 3 1</div><div class="line">1 2 1</div><div class="line">2 4 1</div><div class="line">3 4 1</div></pre></td></tr></table></figure></p>
<p>Sample Output</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">2 4</div></pre></td></tr></table></figure>
<p>解答：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> pat;</div><div class="line"><span class="keyword">import</span> java.util.Arrays;</div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">t3_2</span> </span>&#123;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span> n,m,c1,c2;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span>[] teams;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span>[][] mtx;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> inf=Integer.MAX_VALUE;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		Scanner sc= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">		n=sc.nextInt();</div><div class="line">		m=sc.nextInt();</div><div class="line">		c1=sc.nextInt();</div><div class="line">		c2=sc.nextInt();</div><div class="line">		teams=<span class="keyword">new</span> <span class="keyword">int</span>[n];</div><div class="line">		mtx=<span class="keyword">new</span> <span class="keyword">int</span>[n][n];</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</div><div class="line">			teams[i]=sc.nextInt();</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++) Arrays.fill(mtx[i], -<span class="number">1</span>);</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</div><div class="line">			<span class="keyword">int</span> c1=sc.nextInt(),c2=sc.nextInt(),l=sc.nextInt();</div><div class="line">			mtx[c1][c2]=mtx[c2][c1]=l;</div><div class="line">		&#125;</div><div class="line">		sc.close();</div><div class="line">		djk(c1,c2);</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">djk</span><span class="params">(<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span></span>&#123;</div><div class="line">		<span class="keyword">boolean</span>[] visted=<span class="keyword">new</span> <span class="keyword">boolean</span>[n]; </div><div class="line">		Arrays.fill(visted, <span class="keyword">false</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">int</span>[] currentDist=<span class="keyword">new</span> <span class="keyword">int</span>[n]; </div><div class="line">		Arrays.fill(currentDist, inf);</div><div class="line">		currentDist[start]=<span class="number">0</span>;</div><div class="line">		</div><div class="line">		<span class="keyword">int</span>[] currentTeam=<span class="keyword">new</span> <span class="keyword">int</span>[n];</div><div class="line">		currentTeam=teams.clone();</div><div class="line">		</div><div class="line">		<span class="keyword">int</span>[] path= <span class="keyword">new</span> <span class="keyword">int</span>[n];</div><div class="line">		Arrays.fill(path, <span class="number">0</span>);</div><div class="line">		path[start]=<span class="number">1</span>;</div><div class="line">		</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> min=<span class="number">0</span>;</div><div class="line">		<span class="keyword">while</span>(min!=end)&#123;</div><div class="line">			min=-<span class="number">1</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</div><div class="line">				<span class="keyword">if</span>(!visted[i])&#123;</div><div class="line">					<span class="keyword">if</span>(min==-<span class="number">1</span>) min=i;</div><div class="line">					<span class="keyword">if</span>(currentDist[i]&lt;currentDist[min]) min=i;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">			visted[min]=<span class="keyword">true</span>;</div><div class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;n;j++)&#123;</div><div class="line">				<span class="keyword">if</span>(!visted[j]&amp;&amp; mtx[min][j]!=-<span class="number">1</span>)&#123;</div><div class="line">					<span class="keyword">if</span>(currentDist[min]+mtx[min][j]&lt;currentDist[j])&#123;</div><div class="line">						currentDist[j]=currentDist[min]+mtx[min][j];</div><div class="line">						currentTeam[j]=currentTeam[min]+teams[j];</div><div class="line">						path[j]=path[min];</div><div class="line">					&#125;<span class="keyword">else</span> <span class="keyword">if</span>(currentDist[min]+mtx[min][j]==currentDist[j])&#123;</div><div class="line">						path[j]+=path[min];</div><div class="line">						<span class="keyword">if</span>(currentTeam[min]+teams[j]&gt;currentTeam[j])&#123;</div><div class="line">							currentTeam[j]=currentTeam[min]+teams[j];</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125;	</div><div class="line">		&#125;</div><div class="line">		System.out.println(path[end]+<span class="string">" "</span>+currentTeam[end]);	</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;As an emergency rescue team leader of a city, you are given a special map of your country. The map shows several scattered cities connect
    
    </summary>
    
    
      <category term="pat" scheme="http://yoursite.com/tags/pat/"/>
    
  </entry>
  
  <entry>
    <title>hadoop笔记-备考</title>
    <link href="http://yoursite.com/2016/12/18/hadoop%E7%AC%94%E8%AE%B0-%E5%A4%87%E8%80%83/"/>
    <id>http://yoursite.com/2016/12/18/hadoop笔记-备考/</id>
    <published>2016-12-18T13:10:31.000Z</published>
    <updated>2016-12-20T07:41:20.088Z</updated>
    
    <content type="html"><![CDATA[<h3 id="2-2"><a href="#2-2" class="headerlink" title="2.2"></a>2.2</h3><p>hadoop安装模式:</p>
<ul>
<li>单机模式</li>
<li>伪分布式</li>
<li>完全分布式</li>
</ul>
<p>namenode datanode jobtracker tasktracker secondaryNamenode</p>
<h3 id="2-3"><a href="#2-3" class="headerlink" title="2.3"></a>2.3</h3><p>1.命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hadoop namenode -format</div><div class="line">sbin/start-all.sh</div><div class="line">sbin/stop-all.sh</div></pre></td></tr></table></figure></p>
<p>2.配置文件（考点）</p>
<p><img src="http://i.imgur.com/xm8ivA9.png" alt=""></p>
<h3 id="3-2"><a href="#3-2" class="headerlink" title="3.2"></a>3.2</h3><p>编写mapreduce函数：</p>
<ul>
<li>mapper类 </li>
<li>reducer类</li>
<li>main类</li>
</ul>
<p>详情见wordcount例子</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="keyword">package</span> wordcount;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.util.StringTokenizer;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.conf.Configuration;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.fs.Path;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.IntWritable;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.LongWritable;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.io.Text;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Job;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Mapper;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.Reducer;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.FileInputFormat;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.input.TextInputFormat;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;</div><div class="line"><span class="keyword">import</span> org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCount</span> </span>&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCountMap</span> <span class="keyword">extends</span></span></div><div class="line">			<span class="title">Mapper</span>&lt;<span class="title">LongWritable</span>, <span class="title">Text</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt; &#123;</div><div class="line">		<span class="keyword">private</span> <span class="keyword">final</span> IntWritable one = <span class="keyword">new</span> IntWritable(<span class="number">1</span>);</div><div class="line">		<span class="keyword">private</span> Text word = <span class="keyword">new</span> Text();</div><div class="line"></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">map</span><span class="params">(LongWritable key, Text value, Context context)</span></span></div><div class="line">				<span class="keyword">throws</span> IOException, InterruptedException &#123;</div><div class="line">			String line = value.toString();</div><div class="line">			StringTokenizer token = <span class="keyword">new</span> StringTokenizer(line);</div><div class="line">			<span class="keyword">while</span> (token.hasMoreTokens()) &#123;</div><div class="line">				word.set(token.nextToken());</div><div class="line">				context.write(word, one);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">WordCountReduce</span> <span class="keyword">extends</span></span></div><div class="line">			<span class="title">Reducer</span>&lt;<span class="title">Text</span>, <span class="title">IntWritable</span>, <span class="title">Text</span>, <span class="title">IntWritable</span>&gt; &#123;</div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reduce</span><span class="params">(Text key, Iterable&lt;IntWritable&gt; values,</span></span></div><div class="line">				Context context) <span class="keyword">throws</span> IOException, InterruptedException &#123;</div><div class="line">			<span class="keyword">int</span> sum = <span class="number">0</span>;</div><div class="line">			<span class="keyword">for</span> (IntWritable val : values) &#123;</div><div class="line">				sum += val.get();</div><div class="line">			&#125;</div><div class="line">			context.write(key, <span class="keyword">new</span> IntWritable(sum));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">		Configuration conf = <span class="keyword">new</span> Configuration();</div><div class="line">		Job job = <span class="keyword">new</span> Job(conf);</div><div class="line">		job.setJarByClass(WordCount.class);</div><div class="line">		job.setJobName(<span class="string">"wordcount"</span>);</div><div class="line">		job.setOutputKeyClass(Text.class);</div><div class="line">		job.setOutputValueClass(IntWritable.class);</div><div class="line">		job.setMapperClass(WordCountMap.class);</div><div class="line">		job.setReducerClass(WordCountReduce.class);</div><div class="line">		job.setInputFormatClass(TextInputFormat.class);</div><div class="line">		job.setOutputFormatClass(TextOutputFormat.class);</div><div class="line">		FileInputFormat.addInputPath(job, <span class="keyword">new</span> Path(args[<span class="number">0</span>]));</div><div class="line">		FileOutputFormat.setOutputPath(job, <span class="keyword">new</span> Path(args[<span class="number">1</span>]));</div><div class="line">		job.waitForCompletion(<span class="keyword">true</span>);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>configuration类：怼佢hadoop的配置文件</li>
<li>job类： 表示一个mapreduce任务</li>
</ul>
<h3 id="3-3"><a href="#3-3" class="headerlink" title="3.3"></a>3.3</h3><ul>
<li>打包：<code>wordcount -&gt;export-&gt;jar file</code> 把jar放在$hadoop_home 下</li>
<li>部署和运行： <code>hadoop fs -put /file1 /input/</code></li>
<li>运行： <code>hadoop jar wordcount.jar wordcount.WordMain /file1 /output</code></li>
<li>测试结果：_success _logs part-r-00000</li>
</ul>
<h3 id="4"><a href="#4" class="headerlink" title="4"></a>4</h3><p>hdfs的特点？</p>
<p>hdfs架构？（主从结构，一个namenode节点，多个datanode节点）</p>
<p>hadoop的rpc机制？</p>
<p>hadoop文件系统的访问/</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">hadoop fs -ls /</div><div class="line">hadoop fs -mkdir /input</div><div class="line">hadoop fs -put file1 /input</div><div class="line">hadoop fs -text /input/file1</div><div class="line">hadoop fs -get /input/file1 //复制到本地</div><div class="line">hadoop fs -rm /input/file1</div><div class="line">hadoop namenode -format</div><div class="line">hadoop secondarynamenode</div><div class="line">hadoop dfsadmin</div><div class="line">hadoop job</div><div class="line">hadoop version</div></pre></td></tr></table></figure>
<h3 id="5-1"><a href="#5-1" class="headerlink" title="5.1"></a>5.1</h3><p>hadoop文件的数据结构</p>
<p>hdfs提供两种类型的容器：</p>
<ul>
<li>sequencefile:记录可序列化的数组</li>
</ul>
<p>sequencefile主要由一个header和多个record组成。<br>header:记录key calssname, value classname，存储压缩算法，用户自定义信息等。<br>record：以键值对的方式进行存储。用来表示他的字符数组可以一次解析为：记录的长度，key的长度，key的值，value值。</p>
<ul>
<li>mapfile</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;2-2&quot;&gt;&lt;a href=&quot;#2-2&quot; class=&quot;headerlink&quot; title=&quot;2.2&quot;&gt;&lt;/a&gt;2.2&lt;/h3&gt;&lt;p&gt;hadoop安装模式:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单机模式&lt;/li&gt;
&lt;li&gt;伪分布式&lt;/li&gt;
&lt;li&gt;完全分布式&lt;/li&gt;
&lt;/
    
    </summary>
    
      <category term="hadoop" scheme="http://yoursite.com/categories/hadoop/"/>
    
    
      <category term="hadoop" scheme="http://yoursite.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>hbase</title>
    <link href="http://yoursite.com/2016/12/15/hbase/"/>
    <id>http://yoursite.com/2016/12/15/hbase/</id>
    <published>2016-12-15T05:22:02.000Z</published>
    <updated>2016-12-18T14:12:39.594Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-hbase"><a href="#1-hbase" class="headerlink" title="1.hbase"></a>1.hbase</h4><p>hbase是一个<strong>高可靠、高性能、面向列、可伸缩</strong>的分布式存储系统，利用hbase技术可以再廉价pc server上搭建大规模结构化存储集群。</p>
<p>hbase的特点：</p>
<ul>
<li>大</li>
<li>面向列</li>
<li>稀疏</li>
</ul>
<p>hbase访问接口：</p>
<ul>
<li>native java api</li>
<li>hbase shell</li>
<li>thrift gateway</li>
<li>rest gateway</li>
<li>pig</li>
<li>hive</li>
</ul>
<h4 id="2-hbase存储结构"><a href="#2-hbase存储结构" class="headerlink" title="2.hbase存储结构"></a>2.hbase存储结构</h4><p><img src="http://i.imgur.com/nzZrDc1.png" alt=""></p>
<ol>
<li><p>client<br>管理类操作：client与hmaster进行rpc操作。<br>数据读写类操作：client与hregionserver进行rpc操作。</p>
</li>
<li><p>zookeeper<br>zookeeper quorum中，除了存储-root-表的地址和hmaster的地址，hregion-server也会以ephemeral方式把自己注册到zookeeper中，使得hmaster可以随时的感知各个HRegionServer的健康状态。zookeeper的master election机制保证总有一个master运行</p>
</li>
<li><p>hmaster<br>hmaster主要负责table和region的管理工作。具体包含以下功能：</p>
<ul>
<li>管理用户对table的增删改查操作</li>
<li>管理hregionserver的负载均衡，调整region分布</li>
<li>在region split后，负责新region的分配</li>
<li>在hregionserver停机后，负责失效hregionserver上region迁移</li>
</ul>
</li>
<li><p>hregionserver<br>hregionserver主要负责响应用户i/o请求。向hdfs文件系统中读写数据。是hbase中最核心的模块。<br><img src="http://i.imgur.com/HsVM38Z.png" alt=""><br>hregionserver内部管理了一系列hregion对象，每个hregion对应table中的一个region，</p>
</li>
<li><p>hstore<br>hstore存储是hbase存储的核心，其中有两部分组成，一部分是memstore，一部分是storefile。用户写入的数据首先会放入memstore中，当memstore满了以后，会执行一个flush操作，变成一个storefile。当storefile增加到一定的阈值。会出发compact合并操作将多个storefile合并成一个storefile，合并过程中进行版本合并和数据删除。</p>
</li>
<li><p>hlog<br>每个hregionserver都有一个hlog对象，hlog是一个实现write ahead log的类，每次用户写入memstore同时，也会写一份数据到hlog中，hlog文件会定期回滚出新的，并删除old的文件（已经持久化到memstore）。当hregionserver意外终止的时候，hmaster汇通过zookeeper感知到，hmaster会首先处理遗留下来的hlog。将其中不同region的log数据进行拆分，分别放到相应region的目录下，然后再将失效的region重新分配。领取这些region的hregionserver在load region的过程中，会发现有历史hlog需要处理。因此会重新加载hlog中的数据到memstore中，然后保存到哦storefile，完成数据恢复。</p>
</li>
</ol>
<h4 id="3-hbase存储格式"><a href="#3-hbase存储格式" class="headerlink" title="3.hbase存储格式"></a>3.hbase存储格式</h4><ul>
<li>hfile</li>
<li>hlog file</li>
</ul>
<p>1.hfile<br><img src="http://i.imgur.com/Lqn3NUh.png" alt=""></p>
<p>2.hlogfile</p>
<p><img src="http://i.imgur.com/PYr0eFk.png" alt=""></p>
<h4 id="4-数据模型"><a href="#4-数据模型" class="headerlink" title="4.数据模型"></a>4.数据模型</h4><p><img src="http://i.imgur.com/jEb1inN.png" alt=""></p>
<ul>
<li>row key</li>
<li>列族</li>
<li>时间戳</li>
<li>cell</li>
</ul>
<p><img src="http://i.imgur.com/dmLyotO.png" alt=""></p>
<p>hbase中有两张特殊的表，-root- .meta</p>
<p>.meta. 记录用户表的region信息，可以有多个region<br>-root- 记录.meta.表的region信息，只能有一个region</p>
<p>zookeper中记录-root-表的location </p>
<p><img src="http://i.imgur.com/vBzRFlR.png" alt=""></p>
<h4 id="4-hbase红的算法和流程"><a href="#4-hbase红的算法和流程" class="headerlink" title="4.hbase红的算法和流程"></a>4.hbase红的算法和流程</h4><p>region 定位<br><img src="http://i.imgur.com/FBfy26s.png" alt=""></p>
<p>region 分配</p>
<p>region server上线和下线</p>
<p>master上线和下线</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-hbase&quot;&gt;&lt;a href=&quot;#1-hbase&quot; class=&quot;headerlink&quot; title=&quot;1.hbase&quot;&gt;&lt;/a&gt;1.hbase&lt;/h4&gt;&lt;p&gt;hbase是一个&lt;strong&gt;高可靠、高性能、面向列、可伸缩&lt;/strong&gt;的分布式存储系统，利
    
    </summary>
    
      <category term="hadoop" scheme="http://yoursite.com/categories/hadoop/"/>
    
    
      <category term="hadoop" scheme="http://yoursite.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>hive</title>
    <link href="http://yoursite.com/2016/12/13/hive/"/>
    <id>http://yoursite.com/2016/12/13/hive/</id>
    <published>2016-12-13T07:44:16.000Z</published>
    <updated>2016-12-15T05:24:43.748Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-hive介绍"><a href="#1-hive介绍" class="headerlink" title="1.hive介绍"></a>1.hive介绍</h4><p>hive是基于hadoop的一个数据仓库工具。</p>
<p>Hive由Facebook实现并开源，是建立在Hadoop之上的数据仓库解决方案，支持将结构化的<br>数据文件映射为一张表，提供HQL（Hive SQL）实现方便高效的数据查询，底层数据存储在<br>HDFS上。 Hive的本质是<strong>将HQL转换为MapReduce程序去执行</strong>，使不熟悉MapReduce的用<br>户很方便地利用HQL进行数据ETL操作。</p>
<p>工作原理：<br><img src="http://i.imgur.com/UpnpvV5.png" alt=""></p>
<p>hive的入口是driver，执行的sql语句首先提交大driver驱动，然后调用compiler解释驱动，最终解释成mapreduce任务执行，最后结果返回。</p>
<p>特点：</p>
<ul>
<li>更友好的接口：<br>Hive提供类SQL语法使开发人员在使用接口时几乎没有门槛。</li>
<li>更低的学习成本：<br>Hive底层自动实现SQL到MapReduce任务的转换，大大减少开发人员学习和应用MapReduce成本。</li>
<li>更好的可扩展性：<br>Hive可自由扩展集群规模而无需重启服务，此外Hive还支持用户自定义函数。</li>
<li>良好的容错性：<br>当Hive节点出现问题，SQL仍可继续无中断执行</li>
</ul>
<p>hive数据类型：</p>
<ul>
<li>基本数据类型</li>
<li>复杂数据类型</li>
</ul>
<p><img src="http://i.imgur.com/T2N79nW.png" alt=""></p>
<p>hive和关系型数据库对比：<br><img src="http://i.imgur.com/8yl4sPC.png" alt=""><br>针对比较的部分解释：</p>
<ol>
<li>查询语言：由于sql被广泛的应用在数据仓库中，专门针对hive的特性设计了类sql的查询语句。HQL。</li>
<li>数据存储位置：hive建立在hadoop之上，所有hive的数据都存储在hdfs中，而数据库则将数据保存在块设备或者本地文件系统中。</li>
<li>数据格式：hive中没有专门定义的数据结构，数据格式由用户指定，用户定义数据格式需要指定三个属性：列分割符（通常是空格 ‘\t’ ‘\x001’）行分割符（\n）以及读文件的方法（hive默认有三个文件格式textfile sequencefile rcfile）。hive在加载过程中不会对数据本身进行修改，只是将数据内容复制或者移动到相应的hdfs目录中。</li>
<li>数据更新：hive是针对数据仓库应用设计的，而数据仓库内容读多写少，因此hive不支持对数据的改写和添加。</li>
<li>索引：由于不需要对数据进行处理加载的时候，所以不用对数据中的某些key建立索引</li>
<li>执行： 通过hadoop的mapreduce执行</li>
<li>执行延迟：由于查询数据的时候没有索引，所以需要扫描整个表，因此延迟较高。另一个导致hive执行延迟高的银锁是mapreduce框架。</li>
<li>可扩展性，hive建立在hadoop上，扩展性和hadoop一致</li>
</ol>
<h4 id="2-centos7，hive安装"><a href="#2-centos7，hive安装" class="headerlink" title="2.centos7，hive安装"></a>2.centos7，hive安装</h4><p>Hive原则上可以安装在集群上的任何一台机器上面.</p>
<ol>
<li>准备工作-创建配置数据存储位置（非必须？）<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hadoopfs-mkdir/tmp</div><div class="line">hadoopfs-mkdir/user/hive/warehouse</div><div class="line">hadoopfs-chmodg+w/tmp</div><div class="line">hadoopfs-chmodg+w/user/hive/warehouse</div></pre></td></tr></table></figure>
</li>
</ol>
<p>如果进行这一步的话，在hive-site.xml中配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">hive.metastore.warehouse.dir</div><div class="line">/user/hive/warehouse</div><div class="line">locationofdefaultdatabaseforthewarehouse</div></pre></td></tr></table></figure></p>
<ol>
<li><p>安装mysql作为元数据存储</p>
<p> CentOS7的yum源中默认好像是没有mysql的。为了解决这个问题，我们要先下载mysql的repo源。</p>
<ul>
<li>下载mysql的repo源<br><code>wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</code></li>
<li>安装mysql-community-release-el7-5.noarch.rpm包<br><code>sudo rpm -ivh mysql-community-release-el7-5.noarch.rpm</code></li>
<li>安装mysql<br><code>sudo yum install mysql-server</code></li>
<li>重启mysql<br><code>sudo systemctl restart mysqld.service</code></li>
<li>设置远程登录<br><code>grant all privileges on *.* to root@&quot;%&quot; identified by &quot;password&quot; with grant option;</code><br><code>flush privileges;</code></li>
<li>为hive设置单独的账户密码登录（我认为可选吧，懒省事直接用root，反正是虚拟机实验）<br><code>create user &#39;hive&#39; identified by &#39;mysql&#39;</code><br><code>grant all privileges on *.* to &#39;hive&#39;@&#39;%&#39; with grant option</code></li>
</ul>
</li>
<li><p>hive下载，针对hadoop2.7.2 hbase1.2.4，选择版本hive2.1.1进行安装。</p>
<pre><code><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">wget &quot;http://mirrors.cnnic.cn/apache/hive/hive-2.0.0/apache-hive-2.0.0-bin.tar.gz&quot;</div><div class="line">tar -xzvf apache-hive-2.0.0-bin.tar.gz</div></pre></td></tr></table></figure>
</code></pre></li>
<li><p>拷贝mysql驱动文件<br>下载地址：<a href="http://dev.mysql.com/downloads/connector/j/" target="_blank" rel="external">http://dev.mysql.com/downloads/connector/j/</a> ，解压后拷贝其中的mysql-connector-Java-5.1.38-bin.jar到hive的lib文件夹下。</p>
</li>
<li><p>配置环境变量</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">vi /etc/profile</div><div class="line">export HIVE_HOME=/usr/hive/apache-hive-2.1.1-bin</div><div class="line">export PATH=$PATH:$HIVE_HOME/bin</div></pre></td></tr></table></figure>
</li>
<li><p>修改配置文件</p>
</li>
</ol>
<p>hive-site.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</div><div class="line">&lt;?xml-stylesheet type="text/xsl" href="configuration.xsl"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://127.0.0.1:3306/hive?createDatabaseIfNotExist=true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>JDBC connect string for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Username to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>password to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line">  </div><div class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.exec.local.scratchdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/hive/apache-hive-2.1.1-bin/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Local scratch space for Hive jobs<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.downloaded.resources.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/hive/apache-hive-2.1.1-bin/tmp/resources<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Temporary local directory for added resources in the remote file system.<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.querylog.location<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/hive/apache-hive-2.1.1-bin/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Location of Hive run time structured log file<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"></div><div class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.server2.logging.operation.log.location<span class="tag">&lt;/<span class="name">name</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/hive/apache-hive-2.1.1-bin/tmp/operation_logs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Top level directory where operation logs are stored if logging functionality is enabled<span class="tag">&lt;/<span class="name">description</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>修改hive-en.sh：添加jdk和hadoop根目录路径（可选）</p>
<ol>
<li>初始化数据库<br> <code>schematool -initSchema -dbType mysql</code></li>
<li>启动hive <code>bin/hive</code></li>
</ol>
<h4 id="3-hive架构"><a href="#3-hive架构" class="headerlink" title="3.hive架构"></a>3.hive架构</h4><p><img src="http://i.imgur.com/0xW0CN6.png" alt=""></p>
<p>hive的架构可以分为四个部分：</p>
<ul>
<li>用户接口</li>
<li>元数据存储</li>
<li>解释器、编译器、优化器</li>
<li>数据存储</li>
</ul>
<p>以下分别详细介绍;</p>
<p>1.hive用户接口</p>
<p>hive对外提供三种服务模式，命令行模式（CLI）hive的web模式（WUI）、hive的远程服务（client）</p>
<ul>
<li><p>hive命令行模式：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">./hive</div><div class="line"> hive --service cli</div></pre></td></tr></table></figure>
</li>
<li><p>hive web模式 <code>hive --service hwi</code> 默认端口是9999</p>
</li>
<li>hive远程服务 <code>nohup hive --service hiveserver &amp;</code>（默认端口10000）</li>
</ul>
<p>2.hive元数据库</p>
<p>hive将源数据存储在rdbms中，一般常用mysql和derby。hive默认存储元数据信息在derby。我们已经将其更改为mysql。</p>
<p>理由如下：</p>
<ul>
<li>hive源数据保存在内嵌的derby数据库中么只允许一个会话连接，只适合简单的测试。实际生产环境中不合适，</li>
<li>为了支持多会话，则需要一个独立的元数据库，使用mysql作为元数据库，hive内部对mysql提供了很好的支持。具体配置 参照上面hive安装</li>
</ul>
<p>3.hive的数据存储</p>
<ul>
<li>hive没有专门的数据格式，也没有为数据建立索引。</li>
<li>hive所有的数据存储在hdfs中</li>
<li>hive的数据模型包括（table,external, partition,bucket）</li>
</ul>
<p>部分详细介绍：</p>
<p>table：每一个table在hive中都有一个相应的目录存储数据，例如一个表mytest，他在hdfs中的目录为/user/hive/warehouse/mytest 其中warehouse是在hive-site.xml中<code>hive.metastore.warehouse.dir</code>配置的。所有的table（不包括external table）包含在该目录下</p>
<p>partition:对应于数据库中partition列的密集索引，在，hive中，表中一个partition对应于表下的一个目录，所有的partition的数据都存在对应的目录中，例如mytest表中优name和no两个partition，</p>
<ul>
<li>name=asd,no=4854的hdfs子目录为：<code>/warehouse/mytest/name=asd/no=4854</code></li>
</ul>
<p>buckets对指定列计算hash，根据hash切分数据，目的是并行，每一个bucket对应一个文件，将user列分先至32个bucket，首先对user列计算hash，对应：</p>
<ul>
<li>hash为0的hdfs目录：<code>/warehouse/mytest/name=asd/no=4854、part-00000</code></li>
<li>hash为20的hdfs目录：<code>/warehouse/mytest/name=asd/no=4854、part-00020</code></li>
</ul>
<p><img src="http://i.imgur.com/f3ne7LT.png" alt=""></p>
<p>4.hive解释器</p>
<ul>
<li>解析器</li>
<li>语义分析器</li>
<li>逻辑策略生成器</li>
<li>优化器</li>
</ul>
<h4 id="4-hive文件格式"><a href="#4-hive文件格式" class="headerlink" title="4.hive文件格式"></a>4.hive文件格式</h4><p>四种：textfile sequencefile rcfile 自定义</p>
<p>1.textfile格式</p>
<p>textfile为默认个事，数据不做压缩，磁盘开销大，数据解析开销大。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">create table text(str STRING)</div><div class="line">STORED AS TEXTFILE;</div><div class="line">load data local &apos;/data/test.txt&apos; into table text</div></pre></td></tr></table></figure></p>
<p>2.sequencefile格式</p>
<p>sequencefile格式是hadoop api提供的二进制文件支持。其具有使用方便，可分割，可压缩的特点。一般建议使用block压缩。</p>
<p>3.RCfile格式</p>
<p>一个集行存储和列存储优点于一身，压缩比更高，读取列更快。</p>
<h4 id="5-hive操作"><a href="#5-hive操作" class="headerlink" title="5.hive操作"></a>5.hive操作</h4><ol>
<li>表操作：感觉类似sql。不做介绍了</li>
<li>视图操作</li>
<li>分区操作</li>
<li>桶操作</li>
<li>struct类型<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> struct_test(<span class="keyword">id</span> <span class="built_in">INT</span>,info <span class="keyword">struct</span>&lt;<span class="keyword">name</span>:<span class="keyword">String</span>,age <span class="built_in">INT</span>&gt;)</div><div class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">','</span></div><div class="line">collection items <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">':'</span>;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>准备一个文件,内容如下：<br>1,liu：30<br>2,zhang:30<br>执行<br><code>load data local inpath &#39;/test&#39; into table struct_test</code></p>
<ol>
<li>array类型<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> struct_test(<span class="keyword">id</span> <span class="built_in">INT</span>,info <span class="built_in">array</span>&lt;<span class="built_in">INT</span>&gt;)</div><div class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">','</span></div><div class="line">collection items <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">':'</span>;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>准备一个文件,内容如下：<br>1,1:2:3<br>2,20:30<br>执行<br><code>load data local inpath &#39;/test&#39; into table struct_test</code></p>
<ol>
<li>map类型<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">test</span>(<span class="keyword">id</span> <span class="keyword">String</span>,info <span class="keyword">map</span>&lt;<span class="keyword">STRING</span>,<span class="built_in">INT</span>&gt;)</div><div class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span></div><div class="line">collection items <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">','</span></div><div class="line"><span class="keyword">map</span> <span class="keyword">keys</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">':'</span>;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>准备一个文件,内容如下：<br>1    job:80,team:60<br>2    job:30,team:60,person:100<br>执行<br><code>load data local inpath &#39;/test&#39; into table test</code></p>
<ol>
<li>join操作</li>
<li>hive函数与自定义函数</li>
<li>hive权限控制</li>
</ol>
<h4 id="5-hive优劣分析"><a href="#5-hive优劣分析" class="headerlink" title="5.hive优劣分析"></a>5.hive优劣分析</h4><p>Hive在扩展性和容错性方面有强大优势，但是在执行引擎高效化和多样化接口与可视化等方面，与传<br>统并行数据仓库还存在一定差距。此外像Tenzing、 DryadLINQ、 Dremel、 HadoopDB 等新兴数据<br>仓库，都有Hive值得借鉴的地方。 Hive的诞生带动了Hadoop开源栈系统的进一步发展，支持用户从<br>零开始快速搭建数据仓库系统，推动了整个产业链的进步。</p>
<ul>
<li>存储灵活性：<br>Hive的元数据存储在RDBMS中，所有其它数据都基于HDFS存储。Hive没有专门的数据存储格式也没有为数据建立索引。 Hive默认支持多种文件格式，也支持用户自定义格式。基于Hive的分析过程支持从不同数据源<br>装载数据</li>
<li>执行效率：Hive基于MapReduce，因此Sort和Groupby等都依赖MapReduce。MapReduce可以理解为固化了的执行算子。此外Hive对Join算子的支持不够全面。在特定应用场景下，内存拷贝和数据预处理同样可能影响Hive的执行效率</li>
<li>可扩展性：Hive的数据处理量是PB级的，因此它具备非常好的水平可扩展性，支持集群部署，支持通过简单地增加资源以支持更大的数据量和负载</li>
<li>可视化：Hive的可视化界面基本属于字符终端，对用户的技术水平要求比较高。提供个性化的可视化展现<br>（GUI），是Hive改进的重要方向。</li>
<li>容错性：Hive基于Hadoop HDFS和MapReduce构建，天然具备较好的容错性，基于Hive实的数据仓库可以部署在普通机器构建的分布式集群之上。</li>
</ul>
<h4 id="6-hive-vs-hbase"><a href="#6-hive-vs-hbase" class="headerlink" title="6.hive vs hbase"></a>6.hive vs hbase</h4><p>Hive主要是为简化编写MapReduce程序而生，而HBase是为查询而生。通过Hive的存储接口Hive和HBase可以整合使用。 Hive通过与HBase集成后能够实现快速的查询。同时，由于HBase不持类SQL语句，通过与Hive集成，Hive为HBase提供SQL语法解析的外壳。</p>
<p>Hive与HBase的整合实现是利用两者对外的API接口互相进行通信的，相互通信主要是依靠<br>hive_hbase-handler.jar工具类。在将HBase和Hive集成的过程中注意确保hbase jar包的一致性。</p>
<p>Hive集成HBase需要在Hive表和HBase表之间建立映射关系，也就是Hive表的列和列类型与HBase表的列族及列限定词建立关联。每一个在Hive表中的列都存在于HBase中，但反过来在Hive表中则不需要包含所有的HBase中的列</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-hive介绍&quot;&gt;&lt;a href=&quot;#1-hive介绍&quot; class=&quot;headerlink&quot; title=&quot;1.hive介绍&quot;&gt;&lt;/a&gt;1.hive介绍&lt;/h4&gt;&lt;p&gt;hive是基于hadoop的一个数据仓库工具。&lt;/p&gt;
&lt;p&gt;Hive由Facebook实现
    
    </summary>
    
      <category term="hadoop" scheme="http://yoursite.com/categories/hadoop/"/>
    
    
      <category term="hadoop" scheme="http://yoursite.com/tags/hadoop/"/>
    
  </entry>
  
  <entry>
    <title>java并发编程实战-线程安全性</title>
    <link href="http://yoursite.com/2016/12/13/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98-%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E6%80%A7/"/>
    <id>http://yoursite.com/2016/12/13/java并发编程实战-线程安全性/</id>
    <published>2016-12-13T05:01:13.000Z</published>
    <updated>2016-12-13T07:36:38.980Z</updated>
    
    <content type="html"><![CDATA[<p>无状态对象是线程安全的。</p>
<p>###1.线程安全###</p>
<p>竞态条件：当某个计算的正确性取决于多个线程的交替执行时序时，那么就会发生竞态条件。</p>
<ul>
<li>先检查后执行–星巴克见面的例子</li>
<li>读取修改写入操作–计数器的例子</li>
</ul>
<p>怎么解决竞态条件呢？如果一些列符合操作是原子的话，就可以解决。我们可以采用加锁机制或者使用线程安全类来解决。</p>
<p><code>java.util.concurrrent.atomic</code>包中包含一些原子变量类。</p>
<p>内置锁：intrinsic lock， 线程在进入同步代码块之前会自动获取锁，并且在退出同步代码块的时候自动释放锁。是一种互斥锁。</p>
<p>重入：为每一个锁关联一个获取计数器和一个所有者线程。当计数器为0时，这个锁被认为是没有人持有的。当一个线程请求一个未被持有的锁，jvm会记录下锁的持有者，并且将获取计数器置为1.如果同一个线程再次获取该锁。计数器将递增。而当线程退出同步代码块时，计数器会相应的递减。当计数值为0时，这个锁将会被释放。</p>
<p>###2.对象的共享###</p>
<p>同步：</p>
<ul>
<li>实现原子性或者确定临界区</li>
<li>内存可见性，希望却摆一个线程修改了对象状态后，其他线程能够看到状态发生的变化。</li>
</ul>
<p>失效数据；<br>非原子的64位操作：jvm允许将64位的读操作和写操作分解为两个32位的操作。</p>
<p>volatile变量：当吧变量声明成volatile类型后，编译期和运行时都会注意到这个变量是共享的，因此不会将该变量上的 操作和其他内存操作一起重排序。volatile变量不会缓存在寄存器或者对其他处理器不可见的地方，因此在读取volatile类型的变量时总会返回最新写入的值。</p>
<p>发布：发布一个对象的意思是指使对象能够在当前作用于之外的代码中使用。</p>
<p>溢出：当某个不该发布的对象被发布。</p>
<p>不变性：不变的对象一定是线程安全的</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;无状态对象是线程安全的。&lt;/p&gt;
&lt;p&gt;###1.线程安全###&lt;/p&gt;
&lt;p&gt;竞态条件：当某个计算的正确性取决于多个线程的交替执行时序时，那么就会发生竞态条件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先检查后执行–星巴克见面的例子&lt;/li&gt;
&lt;li&gt;读取修改写入操作–计数器的例子&lt;/
    
    </summary>
    
      <category term="并发编程" scheme="http://yoursite.com/categories/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="并发编程" scheme="http://yoursite.com/tags/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
</feed>
